@model Telerik.Web.Mvc.GridModel<Nop.Web.MVC.Areas.Admin.Models.LanguageResourceModel>
@using Telerik.Web.Mvc.UI;
@using System.Linq;
<div class="section-header">
    <div class="title">
        <img alt="Localization" src="Common/ico-content.png">
        Localization
    </div>
    <div class="options">
        <input type="submit" class="adminButtonBlue" id="ctl00_cph1_ctrlLocaleStringResources_btnSearch"
            value="Search" name="ctl00$cph1$ctrlLocaleStringResources$btnSearch">
        <input type="submit" class="adminButtonBlue" title="Add a new resource string" id="ctl00_cph1_ctrlLocaleStringResources_btnAddNew"
            value="Add new" name="ctl00$cph1$ctrlLocaleStringResources$btnAddNew">
    </div>
</div>
@if (ViewBag.AllLanguages != null)
{
    <table>
        <tr>
            <td class="adminTitle">
                Select Language
            </td>
            <td class="adminData">
                @(Html.Telerik().ComboBox().Name("select-language")
                .ClientEvents(x => x.OnChange("onLanguageSelected"))
                .BindTo(ViewBag.AllLanguages))
                <script type="text/javascript">
                    function onLanguageSelected(e) {
                        window.location = "/Admin/Language/Resources?languageId=" + e.value;
                    }
                </script>
            </td>
        </tr>
    </table>
}
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid(Model.Data)
                    .Name("Grid")
                    .DataKeys(x => x.Add(y => y.Id))
                    .Columns(columns =>
                    {
                        columns.Template(x => x.LanguageName).ClientTemplate("<#= LanguageName #>").Width(100);
                        columns.Bound(x => x.Name).EditorTemplateName("String").Width(300);
                        columns.Bound(x => x.Value).EditorTemplateName("String");
                        columns.Command(commands =>
                        {
                            commands.Edit();
                            commands.Delete();
                        }).Width(180);

                    })
                    .Editable(x =>{
                        x.Mode(GridEditMode.InLine);
                    })
                    .Filterable()
                    .Pageable(settings => settings.PageSize(10).Total(Model.Total))
                    .DataBinding(dataBinding =>
                    {
                        dataBinding.Ajax().Select("Resources", "Language")
                            .Update("ResourceUpdate", "Language")
                            .Delete("ResourceDelete", "Language");
                    })
                    .EnableCustomBinding(true))
        </td>
    </tr>
</table>
