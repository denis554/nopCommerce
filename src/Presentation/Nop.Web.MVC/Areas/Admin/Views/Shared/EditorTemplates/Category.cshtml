@model Nop.Web.MVC.Areas.Admin.Models.CategoryModel
@using Nop.Web.Framework;
@using Telerik.Web.Mvc.UI;

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)

@Html.Telerik().TabStrip().Name("CategoryEdit").Items(x =>
{
    x.Add().Text(T("Category Info").Text).Content(TabInfo().ToHtmlString()).Selected(true);
    x.Add().Text(T("SEO").Text).Content(TabSeo().ToHtmlString());
})

<div class="tab-info">
    <div class="tab-info-tab">
        @helper TabInfo()
            {
                if (Model.Localized.Count > 1)
                { 
            @Html.Telerik().TabStrip().Name("TabInfoLocalized").Items(x =>
{
    x.Add().Text("Standard").Content(StandardInfoTab().ToHtmlString()).Selected(true);
    foreach (var languageId in Model.Localized.Keys)
    {
        var builder = x.Add()
            .Text(Model.Localized[languageId].Language.Name)
            .Content(LocalizedInfoTab(languageId).ToHtmlString())
            .ImageUrl("~/Content/images/flags/" + EngineContext.Current.Resolve<Nop.Services.Localization.ILanguageService>().GetLanguageById(languageId).FlagImageFileName);
    }
})
                }
                else
                { 
            @StandardInfoTab()
                }
            <table class="adminContent">
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("The category image.")
                        @Html.LabelFor(model => model.PictureId)
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(model => model.PictureId)
                        @Html.ValidationMessageFor(model => model.PictureId)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Select a parent category for this category. Leave as [ --- ] to make this the root level category.")
                        @Html.LabelFor(model => model.ParentCategoryId):
                    </td>
                    <td class="adminData">
                        @(Html.Telerik().ComboBoxFor(x => x.ParentCategoryId).BindTo(Model.ParentCategories).Encode(true)
                            .DataBinding(x => x.Ajax().Enabled(true).Select("AllCategories", "Category", new { selectedId = Model.ParentCategoryId })))
                        @Html.ValidationMessageFor(model => model.ParentCategoryId)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Define the price ranges for the store price range filter. Separate ranges with a semicolon e.g. '0-199;200-300;301-;' (301- means 301 and over)")
                        @Html.LabelFor(model => model.PriceRanges):
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(x => x.PriceRanges)
                        @Html.ValidationMessageFor(model => model.PriceRanges)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Check if you want to show a category on home page.")
                        @Html.LabelFor(model => model.ShowOnHomePage):
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(x => x.ShowOnHomePage)
                        @Html.ValidationMessageFor(model => model.ShowOnHomePage)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Check to publish this category (visible in store). Uncheck to unpublish (category not available in store).")
                        @Html.LabelFor(model => model.Published):
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(x => x.Published)
                        @Html.ValidationMessageFor(model => model.Published)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Set the category's display order. 1 represents the top of the list.")
                        @Html.LabelFor(model => model.DisplayOrder):
                    </td>
                    <td class="adminData">
                        @Html.Telerik().NumericTextBoxFor(x => x.DisplayOrder).DecimalDigits(0)
                        @Html.ValidationMessageFor(model => model.DisplayOrder)
                    </td>
                </tr>
            </table>
        }
    </div>
    <div class="tab-info-standard">
        @helper StandardInfoTab()
            {
            <table class="adminContent">
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("The category's name.")
                        @Html.LabelFor(model => model.Name):
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("A description of the category.")
                        @Html.LabelFor(model => model.Description):
                    </td>
                    <td class="adminData">
                        @Html.Telerik().EditorFor(x => x.Description)
                        @Html.ValidationMessageFor(model => model.Description)
                    </td>
                </tr>
            </table>
        }
    </div>
    <div class="tab-info-localized">
        @helper LocalizedInfoTab(int languageId)
            {
            <table class="adminContent">
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("The category's name.")
                        @Html.LabelFor(model => model.Name)
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(model => model.Localized[languageId].Name)
                        @Html.ValidationMessageFor(model => model.Localized[languageId].Name)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("A description of the category.")
                        @Html.LabelFor(model => model.Description):
                    </td>
                    <td class="adminData">
                        @Html.Telerik().EditorFor(model => model.Localized[languageId].Description)
                        @Html.ValidationMessageFor(model => model.Localized[languageId].Description)
                    </td>
                </tr>
            </table>
        }
    </div>
</div>
<div class="seo-info">
    <div class="tab-seo-tab">
        @helper TabSeo()
            {
                if (Model.Localized.Count > 1)
                { 
            @Html.Telerik().TabStrip().Name("TabSeoLocalized").Items(x =>
{
    x.Add().Text("Standard").Content(StandardSeoTab().ToHtmlString()).Selected(true);
    foreach (var languageId in Model.Localized.Keys)
    {
        x.Add().Text(Model.Localized[languageId].Language.Name)
            .Content(LocalizedSeoTab(languageId).ToHtmlString())
            .ImageUrl("~/Content/images/flags/" + EngineContext.Current.Resolve<Nop.Services.Localization.ILanguageService>().GetLanguageById(languageId).FlagImageFileName);
    }
})
                }
                else
                { 
            @StandardSeoTab()
                }
            <table class="adminContent">
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Set the page size for products in this category e.g. '4' products per page.")
                        @Html.LabelFor(model => model.PageSize):
                    </td>
                    <td class="adminData">
                        @Html.Telerik().NumericTextBoxFor(x => x.PageSize).DecimalDigits(0).MinValue(1)
                        @Html.ValidationMessageFor(model => model.PageSize)
                    </td>
                </tr>
            </table>
        }
    </div>
    <div class="tab-seo-standard">
        @helper StandardSeoTab()
            {
            <table class="adminContent">
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Meta keywords to be added to category page header.")
                        @Html.LabelFor(model => model.MetaKeywords):
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(x => x.MetaKeywords)
                        @Html.ValidationMessageFor(model => model.MetaKeywords)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Meta description to be added to category page header.")
                        @Html.LabelFor(model => model.MetaDescription):
                    </td>
                    <td class="adminData">
                        @Html.TextAreaFor(x => x.MetaDescription)
                        @Html.ValidationMessageFor(model => model.MetaDescription)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Override the page title. The default is the name of the category.")
                        @Html.LabelFor(model => model.MetaTitle):
                    </td>
                    <td class="adminData">
                        @Html.TextAreaFor(x => x.MetaTitle)
                        @Html.ValidationMessageFor(model => model.MetaTitle)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Set a search engine friendly page name e.g. 'The Best Computers' to make your page name '##-the-best-computers.aspx' (## represents the category ID). The default is the name of category.")
                        @Html.LabelFor(model => model.SeName):
                    </td>
                    <td class="adminData">
                        @Html.TextAreaFor(x => x.SeName)
                        @Html.ValidationMessageFor(model => model.SeName)
                    </td>
                </tr>
            </table>
        }
    </div>
    <div class="tab-seo-localized">
        @helper LocalizedSeoTab(int languageId)
            {
            <table class="adminContent">
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Meta keywords to be added to category page header.")
                        @Html.LabelFor(model => model.MetaKeywords):
                    </td>
                    <td class="adminData">
                        @Html.EditorFor(model => model.Localized[languageId].MetaKeywords)
                        @Html.ValidationMessageFor(model => model.MetaKeywords)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Meta description to be added to category page header.")
                        @Html.LabelFor(model => model.MetaDescription):
                    </td>
                    <td class="adminData">
                        @Html.TextAreaFor(model => model.Localized[languageId].MetaDescription)
                        @Html.ValidationMessageFor(model => model.Localized[languageId].MetaDescription)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Override the page title. The default is the name of the category.")
                        @Html.LabelFor(model => model.MetaTitle):
                    </td>
                    <td class="adminData">
                        @Html.TextAreaFor(model => model.Localized[languageId].MetaTitle)
                        @Html.ValidationMessageFor(model => model.Localized[languageId].MetaTitle)
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        @Html.Hint("Set a search engine friendly page name e.g. 'The Best Computers' to make your page name '##-the-best-computers.aspx' (## represents the category ID). The default is the name of category.")
                        @Html.LabelFor(model => model.SeName):
                    </td>
                    <td class="adminData">
                        @Html.TextAreaFor(model => model.Localized[languageId].SeName)
                        @Html.ValidationMessageFor(model => model.Localized[languageId].SeName)
                    </td>
                </tr>
            </table>
        }
    </div>
</div>