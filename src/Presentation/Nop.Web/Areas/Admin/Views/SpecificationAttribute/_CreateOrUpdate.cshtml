@using Nop.Core
@model SpecificationAttributeModel

@inject IEventPublisher eventPublisher
@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{

    const string hideInfoBlockAttributeName = "SpecificationAttributePage.HideInfoBlock";
    var hideInfoBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideInfoBlockAttributeName);

    const string hideOptionsBlockAttributeName = "SpecificationAttributePage.HideOptionsBlock";
    var hideOptionsBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideOptionsBlockAttributeName);

    const string hideUsedByProductsBlockAttributeName = "SpecificationAttributePage.HideUsedByProductsBlock";
    var hideUsedByProductsBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideUsedByProductsBlockAttributeName);

}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="panel panel-default collapsible-panel">
            <div class="panel-heading @if (!hideInfoBlock){<text>opened</text>}" data-hideAttribute="@hideInfoBlockAttributeName">
                <span>@T("Admin.Catalog.Attributes.SpecificationAttributes.Info")</span>
                <i class="fa @if (hideInfoBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
            </div>
            <div class="panel-body @if (hideInfoBlock){<text>collapsed</text>}">
                @(Html.LocalizedEditor<SpecificationAttributeModel, SpecificationAttributeLocalizedModel>("specificationattribute-localized",
                @<div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="@Model.Locales[item].Name" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="@Model.Locales[item].Name" />
                            <span asp-validation-for="@Model.Locales[item].Name"></span>
                        </div>
                    </div>
                    <input type="hidden" asp-for="@Model.Locales[item].LanguageId" />
                </div>
,
                @<div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="Name" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="Name" asp-required="true" />
                            <span asp-validation-for="Name"></span>
                        </div>
                    </div>
                </div>))

                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="DisplayOrder" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="DisplayOrder" />
                        <span asp-validation-for="DisplayOrder"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default collapsible-panel">
            <div class="panel-heading @if (!hideOptionsBlock){<text>opened</text>}" data-hideAttribute="@hideOptionsBlockAttributeName">
                <span>@T("Admin.Catalog.Attributes.SpecificationAttributes.Options")</span>
                <i class="fa @if (hideOptionsBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
            </div>

            @if (Model.Id > 0)
            {
                <div class="panel-body @if (hideOptionsBlock){<text>collapsed</text>}">
                    <div id="specificationattributeoptions-grid"></div>

                    <script>
                        $(document).ready(function () {
                            $("#specificationattributeoptions-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("OptionList", "SpecificationAttribute"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: function() {
                                                var data = {
                                                    SpecificationAttributeId: '@(Model.Id)'
                                                };
                                                addAntiForgeryToken(data);
                                                return data;
                                            }
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("OptionDelete", "SpecificationAttribute"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id"
                                        }
                                    },
                                    requestEnd: function (e) {
                                        if (e.type === "destroy") {
                                            var grid = $("#specificationattributeoptions-grid").data('kendoGrid');
                                            grid.dataSource.read();
                                        }
                                    },
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(Model.SpecificationAttributeOptionSearchModel.PageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(Model.SpecificationAttributeOptionSearchModel.AvailablePageSizes)],
                                    @await Html.PartialAsync("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [
                                    {
                                        //TODO display localized values here
                                        field: "Name",
                                        title: "@T("Admin.Catalog.Attributes.SpecificationAttributes.Options.Fields.Name")"
                                    }, {
                                        field: "DisplayOrder",
                                        title: "@T("Admin.Catalog.Attributes.SpecificationAttributes.Options.Fields.DisplayOrder")",
                                        width: 100
                                    }, {
                                        field: "NumberOfAssociatedProducts",
                                        title: "@T("Admin.Catalog.Attributes.SpecificationAttributes.Options.Fields.NumberOfAssociatedProducts")",
                                        width: 250
                                    }, {
                                        field: "Id",
                                        title: "@T("Admin.Common.Edit")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: "<button onclick=\"javascript:OpenWindow('@Url.Content("~/Admin/SpecificationAttribute/OptionEditPopup/")#=Id#?btnId=btnRefresh&formId=specificationattribute-form', 800, 400, true); return false;\" class='btn btn-default'><i class=\"fa fa-pencil\"></i>@T("Admin.Common.Edit")</button>"
                                    }, {
                                        command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        title: "@T("Admin.Common.Delete")",
                                        width: 100
                                    }
                                ]
                            });
                        });
                    </script>
                </div>
                <div class="panel-footer @if (hideOptionsBlock){<text>collapsed</text>}">
                    <button type="submit" id="btnAddNewOption" onclick="javascript:OpenWindow('@(Url.Action("OptionCreatePopup", "SpecificationAttribute", new { specificationAttributeId = Model.Id, btnId = "btnRefresh", formId = "specificationattribute-form" }))', 800, 400, true); return false;" class="btn btn-primary">
                        @T("Admin.Catalog.Attributes.SpecificationAttributes.Options.AddNew")
                    </button>
                    <input type="submit" id="btnRefresh" style="display: none" />
                    <script>
                        $(document).ready(function () {
                            $('#btnRefresh').click(function () {
                                //refresh grid
                                var grid = $("#specificationattributeoptions-grid").data('kendoGrid');
                                grid.dataSource.read();

                                //return false to don't reload a page
                                return false;
                            });
                        });
                    </script>
                </div>
            }    
            else
            {
                <div class="panel-body @if (hideOptionsBlock){<text>collapsed</text>}">
                    @T("Admin.Catalog.Attributes.SpecificationAttributes.Options.SaveBeforeEdit")
                </div>
            }
        </div>

        <div class="panel panel-default collapsible-panel">
            <div class="panel-heading @if (!hideUsedByProductsBlock){<text>opened</text>}" data-hideAttribute="@hideUsedByProductsBlockAttributeName">
                <span>@T("Admin.Catalog.Attributes.SpecificationAttributes.UsedByProducts")</span>
                <i class="fa @if (hideUsedByProductsBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
            </div>

            <div class="panel-body @if (hideUsedByProductsBlock){<text>collapsed</text>}">
                <div id="used-by-products-grid"></div>

                <script>
                    $(document).ready(function () {
                        $("#used-by-products-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("UsedByProducts", "SpecificationAttribute"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: function() {
                                            var data = {
                                                SpecificationAttributeId: '@(Model.Id)'
                                            };
                                            addAntiForgeryToken(data);
                                            return data;
                                        }
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id"
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(Model.SpecificationAttributeProductSearchModel.PageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(Model.SpecificationAttributeProductSearchModel.AvailablePageSizes)],
                                @await Html.PartialAsync("_GridPagerMessages")
                            },
                            scrollable: false,
                            columns: [
                                {
                                    field: "ProductName",
                                    title: "@T("Admin.Catalog.Attributes.SpecificationAttributes.UsedByProducts.Product")"
                                }, {
                                    field: "Published",
                                    title: "@T("Admin.Catalog.Attributes.SpecificationAttributes.UsedByProducts.Published")",
                                    width: 100,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                },
                                {
                                    field: "ProductId",
                                    title: "@T("Admin.Common.View")",
                                    width: 100,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '<a class="btn btn-default" href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#"><i class="fa fa-eye"></i>@T("Admin.Common.View")</a>'
                                }
                            ]
                        });
                    });
                </script>
            </div>
        </div>
        
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.SpecificationAttributeDetailsBlock, additionalData = Model })
    </div>
</div>
