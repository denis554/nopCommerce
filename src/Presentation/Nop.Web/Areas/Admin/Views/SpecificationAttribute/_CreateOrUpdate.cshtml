@model SpecificationAttributeModel
@inject IEventPublisher eventPublisher

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<script>
    $(document).ready(function () {
        bindBootstrapTabSelectEvent('specificationattribute-edit');
    });
</script>

<div class="content">
    <div class="form-horizontal">
        <nop-tabs id="specificationattribute-edit">
            <nop-tab-header>
                <nop-tab-header-item asp-name="tab-info" asp-default="true">@T("Admin.Catalog.Attributes.SpecificationAttributes.Info")</nop-tab-header-item>
                <nop-tab-header-item asp-name="tab-options">@T("Admin.Catalog.Attributes.SpecificationAttributes.Options")</nop-tab-header-item>
            </nop-tab-header>
            <nop-tab-content>
                <nop-tab-content-item asp-name="tab-info" asp-default="true">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</nop-tab-content-item>
                <nop-tab-content-item asp-name="tab-options">@await Html.PartialAsync("_CreateOrUpdate.Options", Model)</nop-tab-content-item>
            </nop-tab-content>
        </nop-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "specificationattribute-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}


@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">