@model CategoryModel

@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{
    const string hideProductsBlockAttributeName = "CategoryPage.HideProductsBlock";
    var hideProductsBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideProductsBlockAttributeName);
}

<div class="panel panel-default advanced-setting collapsible-panel">
    <div class="panel-heading @if (!hideProductsBlock){<text>opened</text>}" data-hideAttribute="@hideProductsBlockAttributeName">
        <span>@T("Admin.Catalog.Categories.Products")</span>
        <i class="fa @if (hideProductsBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
    </div>

    @if (Model.Id > 0)
    {
        <div class="panel-body @if (hideProductsBlock){<text>collapsed</text>}">
            <div id="products-grid"></div>
            <script>
				$(document).ready(function() {
					$("#products-grid").kendoGrid({
					    dataSource: {
					        type: "json",
					        transport: {
					            read: {
					                url: "@Html.Raw(Url.Action("ProductList", "Category"))",
					                type: "POST",
					                dataType: "json",
					                data: function() {
					                    var data = {
					                        CategoryId: '@(Model.Id)'
					                    };
					                    addAntiForgeryToken(data);
					                    return data;
					                }
					            },
					            update: {
					                url: "@Html.Raw(Url.Action("ProductUpdate", "Category"))",
					                type: "POST",
					                dataType: "json",
					                data: addAntiForgeryToken
					            },
					            destroy: {
					                url: "@Html.Raw(Url.Action("ProductDelete", "Category"))",
					                type: "POST",
					                dataType: "json",
					                data: addAntiForgeryToken
					            }
					        },
					        schema: {
					            data: "Data",
					            total: "Total",
					            errors: "Errors",
					            model: {
					                id: "Id",
					                fields: {
					                    ProductName: { editable: false, type: "string" },
					                    IsFeaturedProduct: { editable: true, type: "boolean" },
					                    DisplayOrder: { editable: true, type: "number" },
					                    ProductId: { editable: false, type: "number" }
					                }
					            }
					        },
					        requestEnd: function(e) {
					            if (e.type == "update") {
					                this.read();
					            }
					        },
					        error: function(e) {
					            display_kendoui_grid_error(e);
					            // Cancel the changes
					            this.cancelChanges();
					        },
					        pageSize: @(Model.CategoryProductSearchModel.PageSize),
					        serverPaging: true,
					        serverFiltering: true,
					        serverSorting: true
					    },
					    pageable: {
					        refresh: true,
					        pageSizes: [@(Model.CategoryProductSearchModel.AvailablePageSizes)],
					        @await Html.PartialAsync("_GridPagerMessages")
					    },
					    editable: {
					        confirmation: "@T("Admin.Common.DeleteConfirmation")",
					        mode: "inline"
					    },
					    scrollable: false,
					    columns: [
					        {
					            field: "ProductName",
					            title: "@T("Admin.Catalog.Categories.Products.Fields.Product")"
					        }, {
					            field: "IsFeaturedProduct",
					            title: "@T("Admin.Catalog.Categories.Products.Fields.IsFeaturedProduct")",
					            width: 150,
					            headerAttributes: { style: "text-align:center" },
					            attributes: { style: "text-align:center" },
					            template:
					                '# if(IsFeaturedProduct) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
					        }, {
					            field: "DisplayOrder",
					            title: "@T("Admin.Catalog.Categories.Products.Fields.DisplayOrder")",
					            //integer format
					            format: "{0:0}",
					            width: 150
					        }, {
					            field: "ProductId",
					            title: "@T("Admin.Common.View")",
					            width: 100,
					            headerAttributes: { style: "text-align:center" },
					            attributes: { style: "text-align:center" },
					            template:
					                '<a class="btn btn-default" href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#"><i class="fa fa-eye"></i>@T("Admin.Common.View")</a>'
					        }, {
					            command: [
					                {
					                    name: "edit",
					                    text: {
					                        edit: "@T("Admin.Common.Edit")",
					                        update: "@T("Admin.Common.Update")",
					                        cancel: "@T("Admin.Common.Cancel")"
					                    }
					                }, {
					                    name: "destroy",
					                    text: "@T("Admin.Common.Delete")"
					                }
					            ],
					            width: 200
					        }
					    ]
					});
				});
            </script>
        </div>
        <div class="panel-footer @if (hideProductsBlock){<text>collapsed</text>}">
            <button type="submit" id="btnAddNewProduct"
                    onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "Category", new { categoryId = Model.Id, btnId = "btnRefreshProducts", formId = "category-form" }))', 800, 800, true); return false;"
                    class="btn btn-primary">
                @T("Admin.Catalog.Categories.Products.AddNew")
            </button>
            <input type="submit" id="btnRefreshProducts" style="display: none" />
            <script>
                $(document).ready(function () {
                    $('#btnRefreshProducts').click(function () {
                        //refresh grid
                        var grid = $("#products-grid").data('kendoGrid');
                        grid.dataSource.read();

                        //return false to don't reload a page
                        return false;
                    });
                });
            </script>
        </div>
    }
    else
    {
        <div class="panel-body @if (hideProductsBlock){<text>collapsed</text>}">
            @T("Admin.Catalog.Categories.Products.SaveBeforeEdit")
        </div>
    }
</div>


