@model CustomerUserSettingsModel
@inject IEventPublisher eventPublisher

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.CustomerUser").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Customer and user settings");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Configuration.Settings.CustomerUser")
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
        </div>
    </div>
    @Html.ValidationSummary(false)

    <script>
        $(document).ready(function () {
            bindBootstrapTabSelectEvent('customersettings-edit');
        });
    </script>

    <div class="content">
        <div class="form-horizontal">
            @await Component.InvokeAsync("SettingMode")

            <div id="customersettings-edit" class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    @Html.RenderBootstrapTabHeader("tab-customer", @T("Admin.Configuration.Settings.CustomerUser.CustomerSettings"), true)
                    @Html.RenderBootstrapTabHeader("tab-customerformfields", @T("Admin.Configuration.Settings.CustomerUser.CustomerFormFields"))
                    @Html.RenderBootstrapTabHeader("tab-addressformfields", @T("Admin.Configuration.Settings.CustomerUser.AddressFormFields"))
                </ul>
                <div class="tab-content">
                    @Html.RenderBootstrapTabContent("tab-customer", await Html.PartialAsync("_CustomerUser.Settings", Model), true)
                    @Html.RenderBootstrapTabContent("tab-customerformfields", await Html.PartialAsync("_CustomerUser.CustomerFormFields", Model))
                    @Html.RenderBootstrapTabContent("tab-addressformfields", await Html.PartialAsync("_CustomerUser.AddressFormFields", Model))
                </div>
            </div>
        </div>
    </div>

    {
        //custom tabs
        var eventMessage = new AdminTabStripCreated(this.Html, "customersettings-edit");
        eventPublisher.Publish(eventMessage);
        foreach (var eventBlock in eventMessage.BlocksToRender)
        {
            @eventBlock
        }
    }

    @*save selected tab name*@
    <input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">
}