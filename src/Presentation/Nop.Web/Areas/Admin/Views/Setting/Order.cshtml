@model OrderSettingsModel
@inject IEventPublisher eventPublisher

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.Order").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Order settings");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Configuration.Settings.Order")
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            bindBootstrapTabSelectEvent('ordersettings-edit');
        });
    </script>

    <div class="content">
        <div class="form-horizontal">
            @await Component.InvokeAsync("StoreScopeConfiguration")
            @await Component.InvokeAsync("SettingMode")
            @Html.ValidationSummary(false)

            <div id="ordersettings-edit" class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Configuration.Settings.Order.OrderSettings"), true)
                    @Html.RenderBootstrapTabHeader("tab-returnrequest", @T("Admin.Configuration.Settings.Order.ReturnRequestSettings"))
                </ul>
                <div class="tab-content">
                    @Html.RenderBootstrapTabContent("tab-info", await Html.PartialAsync("_Order.Settings", Model), true)
                    @Html.RenderBootstrapTabContent("tab-returnrequest", await Html.PartialAsync("_Order.ReturnRequestSettings", Model))
                </div>
            </div>
        </div>
    </div>

    {
        //custom tabs
        var eventMessage = new AdminTabStripCreated(this.Html, "ordersettings-edit");
        eventPublisher.Publish(eventMessage);
        foreach (var eventBlock in eventMessage.BlocksToRender)
        {
            @eventBlock
        }
    }

    @*save selected tab name*@
    <input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">
}