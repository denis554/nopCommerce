@using Nop.Core.Domain.Customers
@using Nop.Services
@model CustomerUserSettingsModel

<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-heading">
            @T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Common")
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.UserRegistrationType)
                </div>
                <div class="col-md-9">
                    @Html.NopDropDownListFor(model => model.CustomerSettings.UserRegistrationType, ((UserRegistrationType)Model.CustomerSettings.UserRegistrationType).ToSelectList())
                    @Html.ValidationMessageFor(model => model.CustomerSettings.UserRegistrationType)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
                </div>
            </div>
            <div class="form-group advanced-setting">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.RequireRegistrationForDownloadableProducts)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.RequireRegistrationForDownloadableProducts)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.RequireRegistrationForDownloadableProducts)
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default advanced-setting">
        <div class="panel-heading">
            @T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Password")
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.PasswordMinLength)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.PasswordMinLength)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordMinLength)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.UnduplicatedPasswordsNumber)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.UnduplicatedPasswordsNumber)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.UnduplicatedPasswordsNumber)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.DefaultPasswordFormat)
                </div>
                <div class="col-md-9">
                    @Html.NopDropDownListFor(model => model.CustomerSettings.DefaultPasswordFormat, ((PasswordFormat)Model.CustomerSettings.DefaultPasswordFormat).ToSelectList())
                    @Html.ValidationMessageFor(model => model.CustomerSettings.DefaultPasswordFormat)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.PasswordLifetime)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.PasswordLifetime)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordLifetime)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.FailedPasswordAllowedAttempts)
                </div>
            </div>
            <div class="form-group" id="pnlFailedPasswordLockoutMinutes">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.FailedPasswordLockoutMinutes)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.FailedPasswordLockoutMinutes)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.FailedPasswordLockoutMinutes)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.EnteringEmailTwice)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.EnteringEmailTwice)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.EnteringEmailTwice)
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default advanced-setting">
        <div class="panel-heading">
            @T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Account")
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.UsernamesEnabled)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.UsernamesEnabled)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.UsernamesEnabled)
                </div>
            </div>
            <div class="form-group advanced-setting" id="pnlAllowUsersToChangeUsernames">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
                </div>
            </div>
            <div class="form-group advanced-setting" id="pnlCheckUsernameAvailability">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
                </div>
            </div>
            <div class="form-group advanced-setting">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.CustomerNameFormat)
                </div>
                <div class="col-md-9">
                    @Html.NopDropDownListFor(model => model.CustomerSettings.CustomerNameFormat, ((CustomerNameFormat)Model.CustomerSettings.CustomerNameFormat).ToSelectList())
                    @Html.ValidationMessageFor(model => model.CustomerSettings.CustomerNameFormat)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)
                </div>
            </div>
            <div class="form-group" id="pnlDefaultAvatarEnabled">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.DefaultAvatarEnabled)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.DefaultAvatarEnabled)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.DefaultAvatarEnabled)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.HideDownloadableProductsTab)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.HideDownloadableProductsTab)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.HideDownloadableProductsTab)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.HideNewsletterBlock)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.HideNewsletterBlock)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.HideNewsletterBlock)
                </div>
            </div>
            <div class="form-group" id="pnlNewsletterBlockAllowToUnsubscribe">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.NewsletterBlockAllowToUnsubscribe)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.NewsletterBlockAllowToUnsubscribe)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.NewsletterBlockAllowToUnsubscribe)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.StoreLastVisitedPage)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.StoreLastVisitedPage)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.StoreLastVisitedPage)
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default advanced-setting">
        <div class="panel-heading">
            @T("Admin.Configuration.Settings.CustomerUser.BlockTitle.Profile")
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.AllowViewingProfiles)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.AllowViewingProfiles)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.AllowViewingProfiles)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.ShowCustomersLocation)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.ShowCustomersLocation)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.ShowCustomersLocation)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.CustomerSettings.ShowCustomersJoinDate)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.CustomerSettings.ShowCustomersJoinDate)
                    @Html.ValidationMessageFor(model => model.CustomerSettings.ShowCustomersJoinDate)
                </div>
            </div>
        </div>
        <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)").click(toggleAvatar);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.UsernamesEnabled)").click(toggleUsername);

            toggleAvatar();
            toggleUsername();
        });

        function toggleAvatar() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.AllowCustomersToUploadAvatars)').is(':checked')) {
                $('#pnlDefaultAvatarEnabled').show();
            } else {
                $('#pnlDefaultAvatarEnabled').hide();
            }
        }

        function toggleUsername() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.UsernamesEnabled)').is(':checked')) {
                $('#pnlAllowUsersToChangeUsernames').show();
                $('#pnlCheckUsernameAvailability').show();
            } else {
                $('#pnlAllowUsersToChangeUsernames').hide();
                $('#pnlCheckUsernameAvailability').hide();
            }
        }
        </script>
    </div>
    <div class="panel panel-default advanced-setting">
        <div class="panel-heading">
            @T("Admin.Configuration.Settings.CustomerUser.BlockTitle.TimeZone")
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.DateTimeSettings.AllowCustomersToSetTimeZone)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.DateTimeSettings.AllowCustomersToSetTimeZone)
                    @Html.ValidationMessageFor(model => model.DateTimeSettings.AllowCustomersToSetTimeZone)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.DateTimeSettings.DefaultStoreTimeZoneId)
                </div>
                <div class="col-md-9">
                    @Html.NopDropDownListFor(model => model.DateTimeSettings.DefaultStoreTimeZoneId, Model.DateTimeSettings.AvailableTimeZones)
                    @Html.ValidationMessageFor(model => model.DateTimeSettings.DefaultStoreTimeZoneId)
                </div>
            </div>
        </div>
    </div>
</div>