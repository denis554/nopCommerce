@model VendorModel
@inject IEventPublisher eventPublisher

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @await Component.InvokeAsync("SettingMode", new { modeName = "vendor-advanced-mode" })
                </div>
            </div>
        </div>
        <nop-tabs id="vendor-edit">
            <nop-tab-header>
                <nop-tab-header-item asp-name="tab-info" asp-default="true">@T("Admin.Vendors.Info")</nop-tab-header-item>
                <nop-tab-header-item asp-name="tab-seo" class="advanced-setting">@T("Admin.Common.SEO")</nop-tab-header-item>
                @if (Model.Id > 0)
                {
                    <nop-tab-header-item asp-name="tab-vendor-notes" class="advanced-setting">@T("Admin.Vendors.VendorNotes")</nop-tab-header-item>
                }
            </nop-tab-header>
            <nop-tab-content>
                <nop-tab-content-item asp-name="tab-info" asp-default="true">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</nop-tab-content-item>
                <nop-tab-content-item asp-name="tab-seo">@await Html.PartialAsync("_CreateOrUpdate.SEO", Model)</nop-tab-content-item>
                @if (Model.Id > 0)
                {
                    <nop-tab-content-item asp-name="tab-vendor-notes">@await Html.PartialAsync("_CreateOrUpdate.Notes", Model)</nop-tab-content-item>
                }
            </nop-tab-content>
        </nop-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "vendor-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}