@model PaymentMethodsModel

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Payment.MethodRestrictions").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("PaymentMethods");
}

<div class="panel-group">
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.PaymentMethodListTop, additionalData = Model })
    <div class="panel panel-default">
        <div class="panel-body">
            <p>@T("Admin.Configuration.Payment.MethodRestrictions.Description")</p>
            @if (Model.PaymentMethodRestriction.AvailablePaymentMethods.Count == 0)
            {
                <text>No payment methods installed</text>
            }
            else if (Model.PaymentMethodRestriction.AvailableCountries.Count == 0)
            {
                <text>No countries available</text>
            }
            else
            {
                <script>
                            $(document).ready(function () {
                                @foreach (var pm in Model.PaymentMethodRestriction.AvailablePaymentMethods)
                                {
                                    var systemNameWithoutDot = pm.SystemName.Replace(".", "");
                                    <text>
                                        $('#selectall-@(systemNameWithoutDot)').click(function () {
                                            $('.restrict_@(systemNameWithoutDot)').attr('checked', $(this).is(':checked')).change();
                                        });
                                    </text>
                                }
                            });
                </script>
                <table class="table table-hover table-bordered">
                    <tbody>
                        <tr>
                            <th scope="col" style="padding-top: 14px;">
                                <strong>@T("Admin.Configuration.Payment.MethodRestrictions.Country")</strong>
                            </th>
                            @foreach (var pm in Model.PaymentMethodRestriction.AvailablePaymentMethods)
                            {
                                var systemNameWithoutDot = pm.SystemName.Replace(".", "");
                                <th scope="col">
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" id="selectall-@(systemNameWithoutDot)" />
                                            <strong>@pm.FriendlyName</strong>
                                        </label>
                                    </div>
                                </th>
                            }
                        </tr>
                        @foreach (var c in Model.PaymentMethodRestriction.AvailableCountries)
                        {
                            <tr>
                                <td>
                                    <span>@c.Name</span>
                                </td>
                                @foreach (var pm in Model.PaymentMethodRestriction.AvailablePaymentMethods)
                                {
                                    var restricted = Model.PaymentMethodRestriction.Resticted.ContainsKey(pm.SystemName) && Model.PaymentMethodRestriction.Resticted[pm.SystemName][c.Id];
                                    var systemNameWithoutDot = pm.SystemName.Replace(".", "");
                                    <td>
                                        <input class="restrict_@(systemNameWithoutDot)" type="checkbox" value="@(c.Id)" name="restrict_@(pm.SystemName)" @(restricted ? " checked=checked" : null) />
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.PaymentMethodListBottom, additionalData = Model })
</div>