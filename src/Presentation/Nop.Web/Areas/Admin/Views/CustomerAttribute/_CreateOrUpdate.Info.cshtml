@model CustomerAttributeModel
@using Nop.Core.Domain.Catalog
@using Nop.Services

<script type="text/javascript">
    $(document).ready(function() {

        $("#@Html.IdFor(model => model.AttributeControlTypeId)").change(toggleAttributeControlType);

        toggleAttributeControlType();
    });

    function toggleAttributeControlType() {
        var selectedAttributeControlTypeId = $("#@Html.IdFor(model => model.AttributeControlTypeId)").val();
           
        //values
        if (selectedAttributeControlTypeId == @(((int) AttributeControlType.DropdownList).ToString()) ||
            selectedAttributeControlTypeId == @(((int) AttributeControlType.RadioList).ToString()) ||
            selectedAttributeControlTypeId == @(((int) AttributeControlType.Checkboxes).ToString()) ||
            selectedAttributeControlTypeId == @(((int) AttributeControlType.ColorSquares).ToString()) ||
            selectedAttributeControlTypeId == @(((int) AttributeControlType.ImageSquares).ToString()) ||
            selectedAttributeControlTypeId == @(((int) AttributeControlType.ReadonlyCheckboxes).ToString())) {
                $('[data-tab-name=tab-values]').show();
        } else {
            $('[data-tab-name=tab-values]').hide();
        }
    }
</script>
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            @(Html.LocalizedEditor<CustomerAttributeModel, CustomerAttributeLocalizedModel>("customerattribute-localized",
            @<div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Locales[item].Name)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.Locales[item].Name)
                        @Html.ValidationMessageFor(model => model.Locales[item].Name)
                    </div>
                </div>
                @Html.HiddenFor(model => model.Locales[item].LanguageId)
            </div>
,
            @<div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Name)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.Name, required: true)
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
            </div>
        ))
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.IsRequired)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.IsRequired)
                    @Html.ValidationMessageFor(model => model.IsRequired)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.AttributeControlTypeId)
                </div>
                <div class="col-md-9">
                    @{
                        var attributeControlTypes = ((AttributeControlType)Model.AttributeControlTypeId)
                            .ToSelectList(valuesToExclude:
                            //these attributes don't support some control types
                            new[] { (int)AttributeControlType.FileUpload, (int)AttributeControlType.Datepicker, (int)AttributeControlType.ColorSquares, (int)AttributeControlType.ImageSquares });
                    }
                    @Html.NopDropDownListFor(model => model.AttributeControlTypeId, attributeControlTypes)
                    @Html.ValidationMessageFor(model => model.AttributeControlTypeId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.DisplayOrder)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.DisplayOrder)
                    @Html.ValidationMessageFor(model => model.DisplayOrder)
                </div>
            </div>
        </div>
    </div>
</div>
