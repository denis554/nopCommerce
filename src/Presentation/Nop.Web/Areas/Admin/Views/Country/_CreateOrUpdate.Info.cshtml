@model CountryModel

<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            @(Html.LocalizedEditor<CountryModel, CountryLocalizedModel>("country-info-localized",
            @<div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Locales[item].Name)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.Locales[item].Name)
                        @Html.ValidationMessageFor(model => model.Locales[item].Name)
                    </div>
                </div>
                <div>
                    @Html.HiddenFor(model => model.Locales[item].LanguageId)
                </div>
            </div>
,
            @<div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Name)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.Name, required: true)
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
            </div>
))
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.AllowsBilling)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.AllowsBilling)
                    @Html.ValidationMessageFor(model => model.AllowsBilling)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.AllowsShipping)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.AllowsShipping)
                    @Html.ValidationMessageFor(model => model.AllowsShipping)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.TwoLetterIsoCode)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.TwoLetterIsoCode, required: true)
                    @Html.ValidationMessageFor(model => model.TwoLetterIsoCode)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.ThreeLetterIsoCode)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.ThreeLetterIsoCode, required: true)
                    @Html.ValidationMessageFor(model => model.ThreeLetterIsoCode)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.NumericIsoCode)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.NumericIsoCode)
                    @Html.ValidationMessageFor(model => model.NumericIsoCode)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.SubjectToVat)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.SubjectToVat)
                    @Html.ValidationMessageFor(model => model.SubjectToVat)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.SelectedStoreIds)
                </div>
                <div class="col-md-9">
                    <div class="row">
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.SelectedStoreIds, new {SelectList = Model.AvailableStores})
                            <script>
                                $(document).ready(function() {
                                    var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)').data("kendoMultiSelect");
                                    storesIdsInput.setOptions({
                                        autoClose: false
                                    });

                                    @if (Model.AvailableStores.Count == 0)
                                    {
                                        <text>
                                storesIdsInput.setOptions({
                                    enable: false,
                                    placeholder: 'No stores available'
                                });
                                storesIdsInput._placeholder();
                                storesIdsInput._enable();
                                </text>
                                    }
                                });
                            </script>
                        </div>
                        <div class="col-md-8">
                            @await Component.InvokeAsync("MultistoreDisabledWarning")
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.Published)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.Published)
                    @Html.ValidationMessageFor(model => model.Published)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.NopLabelFor(model => model.DisplayOrder)
                </div>
                <div class="col-md-9">
                    @Html.NopEditorFor(model => model.DisplayOrder)
                    @Html.ValidationMessageFor(model => model.DisplayOrder)
                </div>
            </div>
        </div>
    </div>
</div>
