@model DiscountModel
@inject IEventPublisher eventPublisher
@using Nop.Core.Domain.Discounts;
@using Nop.Services
@using Nop.Web.Framework.UI;

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function() {
        bindBootstrapTabSelectEvent('discount-edit');
    });
</script>

<div class="content">
    <div class="form-horizontal">
        <div id="discount-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Promotions.Discounts.Info"), true)
                @Html.RenderBootstrapTabHeader("tab-requirements", @T("Admin.Promotions.Discounts.Requirements"))
                @Html.RenderBootstrapTabHeader("tab-applied-to-products", @T("Admin.Promotions.Discounts.AppliedToProducts"))
                @Html.RenderBootstrapTabHeader("tab-applied-to-categories", @T("Admin.Promotions.Discounts.AppliedToCategories"))
                @Html.RenderBootstrapTabHeader("tab-applied-to-manufacturers", @T("Admin.Promotions.Discounts.AppliedToManufacturers"))
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabHeader("tab-history", @T("Admin.Promotions.Discounts.History"))
                }
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", await Html.PartialAsync("_CreateOrUpdate.Info", Model), true)
                @Html.RenderBootstrapTabContent("tab-requirements", await Html.PartialAsync("_CreateOrUpdate.Requirements", Model))
                @Html.RenderBootstrapTabContent("tab-applied-to-products", await Html.PartialAsync("_CreateOrUpdate.AppliedToProducts", Model))
                @Html.RenderBootstrapTabContent("tab-applied-to-categories", await Html.PartialAsync("_CreateOrUpdate.AppliedToCategories", Model))
                @Html.RenderBootstrapTabContent("tab-applied-to-manufacturers", await Html.PartialAsync("_CreateOrUpdate.AppliedToManufacturers", Model))
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabContent("tab-history", await Html.PartialAsync("_CreateOrUpdate.History", Model))
                }
            </div>
        </div>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "discount-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">