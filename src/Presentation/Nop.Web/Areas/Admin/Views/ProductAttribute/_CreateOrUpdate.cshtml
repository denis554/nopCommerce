@using Nop.Core
@model ProductAttributeModel

@inject IEventPublisher eventPublisher
@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{

	const string hideInfoBlockAttributeName = "ProductAttributePage.HideInfoBlock";
	var hideInfoBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideInfoBlockAttributeName);

	const string hideUsedByProductsBlockAttributeName = "ProductAttributePage.HideUsedByProductsBlock";
	var hideUsedByProductsBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideUsedByProductsBlockAttributeName);

	const string hidePredefinedValuesBlockAttributeName = "ProductAttributePage.HidePredefinedValuesBlock";
	var hidePredefinedValuesBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hidePredefinedValuesBlockAttributeName);

}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
	<div class="form-horizontal">
        <div id="product-attribute-edit">
            <div class="panel panel-default collapsible-panel">
                <div class="panel-heading @if (!hideInfoBlock){<text>opened</text>}" data-hideAttribute="@hideInfoBlockAttributeName">
                    <span>@T("Admin.Catalog.Attributes.ProductAttributes.Info")</span>
                    <i class="fa @if (hideInfoBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
                </div>
                <div class="panel-body @if (hideInfoBlock){<text>collapsed</text>}">
                    @(Html.LocalizedEditor<ProductAttributeModel, ProductAttributeLocalizedModel>("productattribute-localized",
                    @<div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="@Model.Locales[item].Name" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="@Model.Locales[item].Name" />
                                <span asp-validation-for="@Model.Locales[item].Name"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="@Model.Locales[item].Description" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="@Model.Locales[item].Description" asp-template="RichEditor" />
                                <span asp-validation-for="@Model.Locales[item].Description"></span>
                            </div>
                        </div>
                        <input type="hidden" asp-for="@Model.Locales[item].LanguageId" />
                    </div>
,
                    @<div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="Name" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Name" asp-required="true" />
                                <span asp-validation-for="Name"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="Description" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Description" asp-template="RichEditor" />
                                <span asp-validation-for="Description"></span>
                            </div>
                        </div>
                    </div>))
                </div>
            </div>

            @if (Model.Id > 0)
            {
                <div class="panel panel-default collapsible-panel">
                    <div class="panel-heading @if (!hideUsedByProductsBlock){<text>opened</text>}" data-hideAttribute="@hideUsedByProductsBlockAttributeName">
                        <span>@T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts")</span>
                        <i class="fa @if (hideUsedByProductsBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
                    </div>
                    <div class="panel-body @if (hideUsedByProductsBlock){<text>collapsed</text>}">
                        <p>
                            @T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts.Hint")
                        </p>
                        <div id="used-by-products-grid"></div>

                        <script>
                            $(document).ready(function () {
                                $("#used-by-products-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("UsedByProducts", "ProductAttribute"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: function() {
                                                    var data = {
                                                        ProductAttributeId: '@(Model.Id)'
                                                    };
                                                    addAntiForgeryToken(data);
                                                    return data;
                                                }
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(Model.ProductAttributeProductSearchModel.PageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(Model.ProductAttributeProductSearchModel.AvailablePageSizes)],
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [{
                                            field: "ProductName",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts.Product")",
                                            width: 400
                                        }, {
                                            field: "Published",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts.Published")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        },
                                        {
                                            field: "Id",
                                            title: "@T("Admin.Common.View")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<a class="btn btn-default" href="@Url.Content("~/Admin/Product/Edit/")#=Id#"><i class="fa fa-eye"></i>@T("Admin.Common.View")</a>'
                                        }]
                                });
                            });
                        </script>
                    </div>
                </div>
            }


            <div class="panel panel-default collapsible-panel">
                <div class="panel-heading @if (!hidePredefinedValuesBlock){<text>opened</text>}" data-hideAttribute="@hidePredefinedValuesBlockAttributeName">
                    <span>@T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues")</span>
                    <i class="fa @if (hidePredefinedValuesBlock){<text>fa-plus</text>} else {<text>fa-minus</text>}"></i>
                </div>

                @if (Model.Id > 0)
                {
                    <div class="panel-body @if (hidePredefinedValuesBlock){<text>collapsed</text>}">
                        <p>
                            @T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.Hint")
                        </p>
                        <div id="productattributevalues-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#productattributevalues-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("PredefinedProductAttributeValueList", "ProductAttribute"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: function() {
                                                    var data = {
                                                        ProductAttributeId: '@(Model.Id)'
                                                    };
                                                    addAntiForgeryToken(data);
                                                    return data;
                                                }
                                            },
                                            destroy: {
                                                url: "@Html.Raw(Url.Action("PredefinedProductAttributeValueDelete", "ProductAttribute"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    Product2Name: { editable: false, type: "string" },
                                                    ProductId2: { editable: false, type: "number" }
                                                }
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(Model.PredefinedProductAttributeValueSearchModel.PageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(Model.PredefinedProductAttributeValueSearchModel.AvailablePageSizes)],
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [
                                        {
                                            field: "Name",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.Fields.Name")",
                                            width: 200
                                        }, {
                                            field: "PriceAdjustmentStr",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.Fields.PriceAdjustment")",
                                            width: 150
                                        }, {
                                            field: "WeightAdjustmentStr",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.Fields.WeightAdjustment")",
                                            width: 150
                                        }, {
                                            field: "IsPreSelected",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.Fields.IsPreSelected")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '# if(IsPreSelected) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        }, {
                                            field: "DisplayOrder",
                                            title: "@T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.Fields.DisplayOrder")",
                                            width: 100
                                        }, {
                                            field: "Id",
                                            title: "@T("Admin.Common.Edit")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: "<button onclick=\"javascript:OpenWindow('@Url.Content("~/Admin/ProductAttribute/PredefinedProductAttributeValueEditPopup/")#=Id#?btnId=btnRefresh&formId=productattribute-form', 800, 550, true); return false;\" class='btn btn-default'><i class=\"fa fa-pencil\"></i>@T("Admin.Common.Edit")</button>"
                                        }, {
                                            command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                            title: "@T("Admin.Common.Delete")",
                                            width: 200
                                        }
                                    ]
                                });
                            });
                        </script>
                    </div>
                    <div class="panel-footer @if (hidePredefinedValuesBlock){<text>collapsed</text>}">
                        <button type="submit" id="btnAddNewValue" onclick="javascript:OpenWindow('@(Url.Action("PredefinedProductAttributeValueCreatePopup", "ProductAttribute", new { productAttributeId = Model.Id, btnId = "btnRefresh", formId = "productattribute-form" }))', 800, 550, true); return false;" class="btn btn-primary">
                            @T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.AddNew")
                        </button>
                        <input type="submit" id="btnRefresh" style="display:none" />
                        <script>
                            $(document).ready(function () {
                                $('#btnRefresh').click(function () {
                                    //refresh grid
                                    var grid = $("#productattributevalues-grid").data('kendoGrid');
                                    grid.dataSource.read();

                                    //return false to don't reload a page
                                    return false;
                                });
                            });
                        </script>
                    </div>
                }
                else
                {
                    <div class="panel-body @if (hidePredefinedValuesBlock){<text>collapsed</text>}">
                        @T("Admin.Catalog.Attributes.ProductAttributes.PredefinedValues.SaveBeforeEdit")
                    </div>
                }
            </div>
        </div>
	
	    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ProductAttributeDetailsBlock, additionalData = Model })
	</div>
</div>