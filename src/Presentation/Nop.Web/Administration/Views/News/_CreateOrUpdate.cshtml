@model NewsItemModel
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function() {
        $("#news-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>


<div class="content">
    <div class="form-horizontal">
        <div id="news-edit">
            <ul>
                <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
                    @T("Admin.ContentManagement.News.NewsItems.Info")
                </li>
                <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                    @T("Admin.Common.SEO")
                </li>
                <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                    @T("Admin.ContentManagement.News.NewsItems.Stores")
                </li>
            </ul>
            <div>
                @TabInfo()
            </div>
            <div>
                @TabSeo()
            </div>
            <div>
                @TabStores()
            </div>
        </div>
    </div>
</div>


@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "news-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}


@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.LanguageId)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopDropDownListFor(model => model.LanguageId, new SelectList(ViewBag.AllLanguages, "Id", "Name"))
                        @Html.ValidationMessageFor(model => model.LanguageId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.Title)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.Title)
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.Short)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopTextAreaFor(model => model.Short)
                        @Html.ValidationMessageFor(model => model.Short)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.Full)
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(x => x.Full, "RichEditor")
                        @Html.ValidationMessageFor(model => model.Full)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.AllowComments)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.AllowComments)
                        @Html.ValidationMessageFor(model => model.AllowComments)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.StartDate)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.StartDate)
                        @Html.ValidationMessageFor(model => model.StartDate)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.EndDate)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.EndDate)
                        @Html.ValidationMessageFor(model => model.EndDate)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.Published)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published)
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@helper TabSeo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.MetaKeywords)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(x => x.MetaKeywords)
                        @Html.ValidationMessageFor(model => model.MetaKeywords)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.MetaDescription)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopTextAreaFor(model => model.MetaDescription)
                        @Html.ValidationMessageFor(model => model.MetaDescription)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.MetaTitle)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.MetaTitle)
                        @Html.ValidationMessageFor(model => model.MetaTitle)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.SeName)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.SeName)
                        @Html.ValidationMessageFor(model => model.SeName)
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@helper TabStores()
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.LimitedToStores)").click(toggleStoreMapping);

            toggleStoreMapping();
        });

        function toggleStoreMapping() {
            if ($('#@Html.FieldIdFor(model => model.LimitedToStores)').is(':checked')) {
                $('#pnl-available-stores').show();
            } else {
                $('#pnl-available-stores').hide();
            }
        }
    </script>
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.LimitedToStores)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.LimitedToStores)
                        @Html.ValidationMessageFor(model => model.LimitedToStores)
                    </div>
                </div>
                <div class="form-group" id="pnl-available-stores">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.AvailableStores)
                    </div>
                    <div class="col-sm-9">
                        @if (Model.AvailableStores != null && Model.AvailableStores.Count > 0)
                        {
                            @Html.Action("MultistoreDisabledWarning", "Common")
                            foreach (var store in Model.AvailableStores)
                            {
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" name="SelectedDiscountIds" value="@store.Id"
                                               @if (Model.SelectedStoreIds != null && Model.SelectedStoreIds.Contains(store.Id))
                                               {
                                                   <text> checked="checked" </text>
                                               }/>
                                        @store.Name
                                    </label>
                                </div>
                            }
                        }
                        else
                        {
                            <text>No stores defined</text>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

