@model Nop.Admin.Models.ProductListModel
@using Telerik.Web.Mvc.UI
@using Nop.Web.Framework
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" />
            @T("Admin.Catalog.Products.Manage")
        </div>
        <div class="options">
            <a href="@Url.Action("Create")" class="t-button">@T("Admin.Common.AddNew")</a> @*<a href="@Url.Action("Export")" class="t-button">@T("Admin.Common.ExportToXml")</a>*@
        </div>
    </div>

    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchProductName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchManufacturerId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GoDirectlyToSku):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.GoDirectlyToSku)
                <button type="submit" name="go-to-product-by-sku" value="go-to-product-by-sku" class="t-button">@T("Admin.Common.Go")</button>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <button type="submit" name="search-products" value="search-products" class="t-button">@T("Admin.Common.Search")</button>
            </td>
        </tr>
    </table>
    <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<Nop.Admin.Models.ProductModel>(Model.Products.Data)
                    .Name("products-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Name).Filterable(false);
                        //little hack to allow filtering by category and manufacturer
                        columns.Bound(x => x.SearchCategoryId).Filterable(false).Hidden(true);
                        columns.Bound(x => x.SearchManufacturerId).Filterable(false).Hidden(true);
                        columns.Bound(x => x.Published).Filterable(false)
                            .Width("100px")
                            .Template(x => x.Published.ToString().ToLower())
                            .Centered();
                        columns.Bound(x => x.Id)
                            .Width(50)
                            .Filterable(false)
                            .Centered()
                            .Template(x => Html.ActionLink(T("Admin.Common.Edit").Text, "Edit", new { id = x.Id }))
                            .ClientTemplate("<a href=\"Edit/<#= Id #>\">" + T("Admin.Common.Edit").Text + "</a>")
                            .Title(T("Admin.Common.Edit").Text);
                    })
                    .Pageable(settings => settings.Total(Model.Products.Total).PageSize(10))
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("ProductList", "Product"))
                    .Filterable(filtering => filtering.Filters(filters =>
                    {
                        //product name
                        if (!String.IsNullOrEmpty(ViewData["searchProductName"] as string))
                        {
                            filters.Add(x => x.Name).Contains((string)ViewData["searchProductName"]);
                        }
                        //category id
                        if (ViewData["searchCategoryId"] != null)
                        {
                            filters.Add(x => x.SearchCategoryId).IsEqualTo((int)ViewData["searchCategoryId"]);
                        }
                        //manufacturer id
                        if (ViewData["searchManufacturerId"] != null)
                        {
                            filters.Add(x => x.SearchManufacturerId).IsEqualTo((int)ViewData["searchManufacturerId"]);
                        }
                    }))
                    .EnableCustomBinding(true))
            </td>
        </tr>
    </table>
}