@model ProductModel

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<script>
    $(document).ready(function () {
        bindBootstrapTabSelectEvent('product-edit');
    });
</script>

<div class="content">
    <div class="form-horizontal">
        <div id="product-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Catalog.Products.Info"), true)
                @Html.RenderBootstrapTabHeader("tab-seo", @T("Admin.Common.SEO"))
                @Html.RenderBootstrapTabHeader("tab-pictures", @T("Admin.Catalog.Products.Pictures"))
                @Html.RenderBootstrapTabHeader("tab-categories", @T("Admin.Catalog.Products.Categories"))
                @Html.RenderBootstrapTabHeader("tab-manufacturers", @T("Admin.Catalog.Products.Manufacturers"))
                @Html.RenderBootstrapTabHeader("tab-specification-attributes", @T("Admin.Catalog.Products.SpecificationAttributes"))
                @Html.RenderBootstrapTabHeader("tab-product-attributes", @T("Admin.Catalog.Products.ProductAttributes"))
                @Html.RenderBootstrapTabHeader("tab-tier-prices", @T("Admin.Catalog.Products.TierPrices"))
                @Html.RenderBootstrapTabHeader("tab-discounts", @T("Admin.Catalog.Products.Discounts"))
                @Html.RenderBootstrapTabHeader("tab-acl", @T("Admin.Catalog.Products.Acl"))
                @Html.RenderBootstrapTabHeader("tab-stores", @T("Admin.Catalog.Products.Stores"))
                @Html.RenderBootstrapTabHeader("tab-related-products", @T("Admin.Catalog.Products.RelatedProducts"))
                @Html.RenderBootstrapTabHeader("tab-cross-sells", @T("Admin.Catalog.Products.CrossSells"))
                @Html.RenderBootstrapTabHeader("tab-associated-products", @T("Admin.Catalog.Products.AssociatedProducts"))
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabHeader("tab-purchased-with-orders", @T("Admin.Catalog.Products.PurchasedWithOrders"))
                }
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @Html.RenderBootstrapTabContent("tab-seo", @TabSeo())
                @Html.RenderBootstrapTabContent("tab-pictures", @TabPictures())
                @Html.RenderBootstrapTabContent("tab-categories", @TabCategories())
                @Html.RenderBootstrapTabContent("tab-manufacturers", @TabManufacturers())
                @Html.RenderBootstrapTabContent("tab-specification-attributes", @TabSpecificationAttributes())
                @Html.RenderBootstrapTabContent("tab-product-attributes", @TabProductAttributes())
                @Html.RenderBootstrapTabContent("tab-tier-prices", @TabTierPrices())
                @Html.RenderBootstrapTabContent("tab-discounts", @TabDiscounts())
                @Html.RenderBootstrapTabContent("tab-acl", @TabAcl())
                @Html.RenderBootstrapTabContent("tab-stores", @TabStores())
                @Html.RenderBootstrapTabContent("tab-related-products", @TabRelatedProducts())
                @Html.RenderBootstrapTabContent("tab-cross-sells", @TabCrossSells())
                @Html.RenderBootstrapTabContent("tab-associated-products", @TabAssociatedProducts())
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabContent("tab-purchased-with-orders", @TabPurchasedWithOrders())
                }
            </div>
        </div>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "product-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">

@helper TabInfo()
{
    @Html.Partial("_CreateOrUpdate.Info", Model)
}

@helper TabSeo()
{
    @Html.Partial("_CreateOrUpdate.SEO", Model)
}

@helper TabCategories()
{
    @Html.Partial("_CreateOrUpdate.Categories", Model)
}

@helper TabManufacturers()
{
    @Html.Partial("_CreateOrUpdate.Manufacturers", Model)
}

@helper TabPictures()
{
    @Html.Partial("_CreateOrUpdate.Pictures", Model)
}

@helper TabSpecificationAttributes()
{
    @Html.Partial("_CreateOrUpdate.SpecificationAttributes", Model)
}

@helper TabAcl()
{
    @Html.Partial("_CreateOrUpdate.Acl", Model)
}

@helper TabStores()
{
    @Html.Partial("_CreateOrUpdate.Stores", Model)
}

@helper TabTierPrices()
{
    @Html.Partial("_CreateOrUpdate.TierPrices", Model)
}

@helper TabProductAttributes()
{
    @Html.Partial("_CreateOrUpdate.ProductAttributes", Model)
}

@helper TabDiscounts()
{
    @Html.Partial("_CreateOrUpdate.Discounts", Model)
}

@helper TabRelatedProducts()
{
    @Html.Partial("_CreateOrUpdate.RelatedProducts", Model)
}

@helper TabCrossSells()
{
    @Html.Partial("_CreateOrUpdate.CrossSells", Model)
}

@helper TabAssociatedProducts()
{
    @Html.Partial("_CreateOrUpdate.AssociatedProducts", Model)
}

@helper TabPurchasedWithOrders()
{
    @Html.Partial("_CreateOrUpdate.PurchasedWithOrders", Model)
}