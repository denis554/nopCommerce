@model ProductModel

<div class="panel-group">
    <div class="panel panel-default">
        @if (Model.Id > 0)
        {
            <div class="panel-body">
                <ul>
                    <li>
                        @T("Admin.Catalog.Products.AssociatedProducts.Note1")
                    </li>
                    <li>
                        @T("Admin.Catalog.Products.AssociatedProducts.Note2")
                    </li>
                </ul>

                <div id="associatedproducts-grid"></div>

                <script>
                    $(document).ready(function () {
                        $("#associatedproducts-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("AssociatedProductList", "Product", new {productId = Model.Id}))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("AssociatedProductUpdate", "Product"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("AssociatedProductDelete", "Product"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            ProductName: { editable: false, type: "string" },
                                            DisplayOrder: { editable: true, type: "number" },
                                            Id: { editable: false, type: "number" }
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                numeric: false,
                                previousNext: false,
                                info: false
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                                {
                                    field: "ProductName",
                                    title: "@T("Admin.Catalog.Products.AssociatedProducts.Fields.Product")"
                                }, {
                                    field: "DisplayOrder",
                                    title: "@T("Admin.Catalog.Products.AssociatedProducts.Fields.DisplayOrder")",
                                    //integer format
                                    format: "{0:0}",
                                    width: 150
                                }, {
                                    field: "Id",
                                    title: "@T("Admin.Common.View")",
                                    width: 100,
                                    template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=Id#">@T("Admin.Common.View")</a>'
                                }, {
                                    command: [
                                        {
                                            name: "edit",
                                            text: {
                                                edit: "@T("Admin.Common.Edit")",
                                                update: "@T("Admin.Common.Update")",
                                                cancel: "@T("Admin.Common.Cancel")"
                                            }
                                        }, {
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                        }
                                    ],
                                    width: 200
                                }
                            ]
                        });
                    });
                </script>
            </div>
            <div class="panel-footer">
                <input type="submit" id="btnAddNewAssociatedProduct" value="@T("Admin.Catalog.Products.AssociatedProducts.AddNew")" onclick="javascript:OpenWindow('@(Url.Action("AssociatedProductAddPopup", "Product", new { productId = Model.Id, btnId = "btnRefreshAssociatedProducts", formId = "product-form" }))    ', 800, 800, true); return false;" class="btn btn-default" />
                <input type="submit" id="btnRefreshAssociatedProducts" style="display: none" />
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('#btnRefreshAssociatedProducts').click(function () {
                            //refresh grid
                            var grid = $("#associatedproducts-grid").data('kendoGrid');
                            grid.dataSource.read();

                            //return false to don't reload a page
                            return false;
                        });
                    });
                </script>
            </div>
        }
        else
        {
            <div class="panel-body">
                @T("Admin.Catalog.Products.AssociatedProducts.SaveBeforeEdit")
            </div>
        }
    </div>
</div>
