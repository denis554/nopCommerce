@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
}

@model OrderModel.AddOrderProductModel

@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
}
@using Telerik.Web.Mvc.UI;
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
            @T("Admin.Orders.Products.AddNew")
        </div>
    </div>
    <table width="100%" id="product-search-box">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchProductName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchManufacturerId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <button type="submit" id="search-products" value="search-products" class="t-button">@T("Admin.Common.Search")</button>
            </td>
        </tr>
    </table>
    <table class="adminContent" id="product-list">
        <tr>
            <td>
               <strong>@T("Admin.Orders.Products.AddNew.Note1")</strong>
            </td>
        </tr>
        <tr>
            <td>
                @(Html.Telerik().Grid<OrderModel.AddOrderProductModel.ProductVariantLineModel>()
                    .Name("products-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(pv => pv.Id).Width(70);
                        columns.Bound(pv => pv.Name).Width(400);
                        columns.Bound(pv => pv.Sku).Width(100);
                    })
                    .Selectable()
                    .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("ProductAddPopupList", "Order"))
                    .ClientEvents(events => events.OnDataBinding("onDataBinding").OnRowSelected("onRowSelected"))
                    .EnableCustomBinding(true))
            </td>
        </tr>
    </table>
    <div id="productvariantdetails"></div>
    @Html.HiddenFor(model => Model.OrderId)
    <script type="text/javascript">
        $(document).ready(function () {
            $('#search-products').click(function () {
                var grid = $('#products-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                return false;
            });
        });

        $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#search-products").click();
                return false;
            }
        });

        function onDataBinding(e) {
            var searchModel = {
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
                SearchCategoryId: $('#SearchCategoryId').val(),
                SearchManufacturerId: $('#SearchManufacturerId').val()
            };
            e.data = searchModel;
        }

        function onRowSelected(e) {
            productVariantID = e.row.cells[0].innerHTML;
            //load 'add to cart' block
            loadAddToCartBlock(productVariantID);
            //hide list
            $('#product-search-box').hide();
            $('#product-list').hide();
        }

        function loadAddToCartBlock(productVariantID) {
            //load "product variant details page" block
            $.ajax({
                    cache:false,
                    type: "GET",
                    url: "@(Url.Action("ProductAddDetails", "Order"))",
                    data: "productVariantId=" + productVariantID,
                    success: function (response) {
                         $('#productvariantdetails').html(response.html);
                    },
                    error:function (xhr, ajaxOptions, thrownError){
                        alert(xhr.responseText);
                    }  
                });
        }

        function closeAddOrderProductWindow(){
            try {window.opener.document.forms['@(ViewBag.formId)'].@(ViewBag.btnId).click();}
            catch (e){} 
            window.close();
        }
    </script>
}