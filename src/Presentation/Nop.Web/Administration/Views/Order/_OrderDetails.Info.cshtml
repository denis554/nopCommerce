@model OrderModel
@using Nop.Core.Domain.Tax;
@using Nop.Core.Domain.Orders;

@if (!Model.IsLoggedInAsVendor)
{
    <script type="text/javascript">
        $(document).ready(function () {
            toggleChangeOrderStatus(false);
            toggleOrderTotals(false);
            toggleCC(false);
        });

        function toggleChangeOrderStatus(editmode) {
            if (editmode) {
                $('#pnlChangeOrderStatus').show();
                $('#btnChangeOrderStatus').hide();
            } else {
                $('#pnlChangeOrderStatus').hide();
                $('#btnChangeOrderStatus').show();
            }
        }

        function toggleOrderTotals(editmode) {
            if (editmode) {
                $('#trEditOrderTotals').show();
                $('#btnEditOrderTotals').hide();
                $('#btnSaveOrderTotals').show();
                $('#btnCancelOrderTotals').show();
            } else {
                $('#trEditOrderTotals').hide();
                $('#btnEditOrderTotals').show();
                $('#btnSaveOrderTotals').hide();
                $('#btnCancelOrderTotals').hide();
            }
        }

        function toggleCC(editmode) {
            if (editmode) {
                $('#lblCardType').hide();
                $('#@Html.FieldIdFor(model => model.CardType)').show();
                $('#lblCardName').hide();
                $('#@Html.FieldIdFor(model => model.CardName)').show();
                $('#lblCardNumber').hide();
                $('#@Html.FieldIdFor(model => model.CardNumber)').show();
                $('#lblCardCvv2').hide();
                $('#@Html.FieldIdFor(model => model.CardCvv2)').show();
                $('#lblCardExpirationMonth').hide();
                $('#@Html.FieldIdFor(model => model.CardExpirationMonth)').show();
                $('#lblCardExpirationYear').hide();
                $('#@Html.FieldIdFor(model => model.CardExpirationYear)').show();
                $('#btnEditCC').hide();
                $('#btnSaveCC').show();
                $('#btnCancelCC').show();
            } else {
                $('#lblCardType').show();
                $('#@Html.FieldIdFor(model => model.CardType)').hide();
                $('#lblCardName').show();
                $('#@Html.FieldIdFor(model => model.CardName)').hide();
                $('#lblCardNumber').show();
                $('#@Html.FieldIdFor(model => model.CardNumber)').hide();
                $('#lblCardCvv2').show();
                $('#@Html.FieldIdFor(model => model.CardCvv2)').hide();
                $('#lblCardExpirationMonth').show();
                $('#@Html.FieldIdFor(model => model.CardExpirationMonth)').hide();
                $('#lblCardExpirationYear').show();
                $('#@Html.FieldIdFor(model => model.CardExpirationYear)').hide();
                $('#btnEditCC').show();
                $('#btnSaveCC').hide();
                $('#btnCancelCC').hide();
            }
        }

    </script>
}

<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            @if (!Model.IsLoggedInAsVendor)
            {
                <div class="form-group">
                    <div class="col-sm-3">
                        <strong>
                            @Html.NopLabelFor(model => model.OrderStatus)
                        </strong>
                    </div>
                    <div class="col-sm-9">
                        <strong>
                            @Model.OrderStatus
                        </strong>&nbsp;
                        @if (Model.CanCancelOrder)
                        {
                            <input type="submit" name="cancelorder" value="@T("Admin.Orders.Fields.OrderStatus.Cancel")" id="cancelorder" class="btn bg-red" onclick="return confirm('@T("Admin.Common.AreYouSure")');" />
                        }
                        <input type="submit" name="btnChangeOrderStatus" value="@T("Admin.Orders.Fields.OrderStatus.Change")" onclick="toggleChangeOrderStatus(true);return false;" id="btnChangeOrderStatus" class="btn bg-light-blue" />
                        <div id="pnlChangeOrderStatus">
                            <em>@T("Admin.Orders.Fields.OrderStatus.Change.ForAdvancedUsers")</em>
                            <br />
                            @Html.NopDropDownListFor(model => model.OrderStatusId, ((OrderStatus)Model.OrderStatusId).ToSelectList())
                            <input type="submit" name="btnSaveOrderStatus" value="@T("Admin.Common.Save")" id="btnSaveOrderStatus" class="btn bg-light-blue" onclick="return confirm('@T("Admin.Common.AreYouSure")');" style="margin-top: 3px" />
                            <input type="submit" name="btnCancelOrderStatus" value="@T("Admin.Common.Cancel")" onclick="toggleChangeOrderStatus(false);return false;" id="btnCancelOrderStatus" class="btn bg-teal" style="margin-top: 3px" />
                        </div>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-sm-3">
                    @Html.NopLabelFor(model => model.Id)
                </div>
                <div class="col-sm-9">
                    <p>@Model.Id</p>
                </div>
            </div>
            @if (!Model.IsLoggedInAsVendor)
            {
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.OrderGuid)
                    </div>
                    <div class="col-sm-9">
                        <p>@Model.OrderGuid</p>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-sm-3">
                    @Html.NopLabelFor(model => model.StoreName)
                </div>
                <div class="col-sm-9">
                    <p>@Model.StoreName</p>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-body">
            @if (!Model.IsLoggedInAsVendor)
            {
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.CustomerId)
                    </div>
                    <div class="col-sm-9">
                        <p>@Html.ActionLink(Model.CustomerInfo, "Edit", "Customer", new { id = Model.CustomerId }, new { })</p>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.CustomerIp)
                    </div>
                    <div class="col-sm-9">
                        <p>@Model.CustomerIp</p>
                    </div>
                </div>
                if (Model.RecurringPaymentId > 0)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.RecurringPaymentId)
                        </div>
                        <div class="col-sm-9">
                            <p>
                                <a href="@Url.Action("Edit", "RecurringPayment", new {id = Model.RecurringPaymentId})">@T("Admin.Common.View")</a>
                            </p>
                        </div>
                    </div>
                }
                if (!String.IsNullOrEmpty(Model.VatNumber))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.VatNumber)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.VatNumber</p>
                        </div>
                    </div>
                }
                if (Model.AffiliateId > 0)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.AffiliateId)
                        </div>
                        <div class="col-sm-9">
                            <p>
                                <a href="@Url.Action("Edit", "Affiliate", new {id = Model.AffiliateId})">@Model.AffiliateName - @T("Admin.Common.View")</a>
                            </p>
                        </div>
                    </div>
                }
                if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderSubtotalInclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderSubtotalInclTax</p>
                        </div>
                    </div>
                }
                if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderSubtotalExclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderSubtotalExclTax</p>
                        </div>
                    </div>
                }
                if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                    && !String.IsNullOrEmpty(Model.OrderSubTotalDiscountInclTax))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderSubTotalDiscountInclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderSubTotalDiscountInclTax</p>
                        </div>
                    </div>
                }
                if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                    && !String.IsNullOrEmpty(Model.OrderSubTotalDiscountExclTax))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderSubTotalDiscountExclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderSubTotalDiscountExclTax</p>
                        </div>
                    </div>
                }
                if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderShippingInclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderShippingInclTax</p>
                        </div>
                    </div>
                }
                if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderShippingExclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderShippingExclTax</p>
                        </div>
                    </div>
                }
                if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
                    && !String.IsNullOrEmpty(Model.PaymentMethodAdditionalFeeInclTax))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.PaymentMethodAdditionalFeeInclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.PaymentMethodAdditionalFeeInclTax</p>
                        </div>
                    </div>
                }
                if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
                    && !String.IsNullOrEmpty(Model.PaymentMethodAdditionalFeeExclTax))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.PaymentMethodAdditionalFeeExclTax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.PaymentMethodAdditionalFeeExclTax</p>
                        </div>
                    </div>
                }
                if (Model.DisplayTaxRates)
                {
                    foreach (var tr in Model.TaxRates)
                    {
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.Tax) <span style="padding-top: 7px;margin-right: 5px;float: right;">@tr.Rate%</span>
                            </div>
                            <div class="col-sm-9">
                                <p>@tr.Value</p>
                            </div>
                        </div>
                    }
                }
                if (Model.DisplayTax)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.Tax)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.Tax</p>
                        </div>
                    </div>
                }
                if (!String.IsNullOrEmpty(Model.OrderTotalDiscount))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderTotalDiscount)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.OrderTotalDiscount</p>
                        </div>
                    </div>
                }
                foreach (var gc in Model.GiftCards)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.GiftCards[0].CouponCode)
                            <span style="padding-top: 7px;margin-right: 5px;float: right;">(@(gc.CouponCode))</span>
                        </div>
                        <div class="col-sm-9">
                            <p>@gc.Amount</p>
                        </div>
                    </div>
                }
                if (Model.RedeemedRewardPoints > 0)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.RedeemedRewardPoints)
                        </div>
                        <div class="col-sm-9">
                            <p>
                                @Model.RedeemedRewardPoints @T("Admin.Orders.Fields.RedeemedRewardPoints.Points")
                                <text>/</text>
                                @Model.RedeemedRewardPointsAmount
                            </p>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.OrderTotal)
                    </div>
                    <div class="col-sm-9">
                        <p>@Model.OrderTotal</p>
                    </div>
                </div>
                if (!String.IsNullOrEmpty(Model.RefundedAmount))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.RefundedAmount)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.RefundedAmount</p>
                        </div>
                    </div>
                }
                if (Model.UsedDiscounts.Count > 0)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.UsedDiscounts)
                        </div>
                        <div class="col-sm-9">
                            <p>
                                @for (int i = 0; i < Model.UsedDiscounts.Count; i++)
                                {
                                    var discount = Model.UsedDiscounts[i];
                                    <a href="@Url.Action("Edit", "Discount", new {id = discount.DiscountId})">@discount.DiscountName</a>
                                    if (i != Model.UsedDiscounts.Count - 1)
                                    {
                                        <text>,</text>
                                    }
                                }
                            </p>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.Profit)
                    </div>
                    <div class="col-sm-9">
                        <p>@Model.Profit
                    </div>
                </div>

                <div id="trEditOrderTotals">
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderSubtotalInclTaxValue)
                        </div>
                        <div class="col-sm-2">
                            @T("Admin.Orders.Fields.Edit.InclTax")&nbsp; @Html.NopEditorFor(model => model.OrderSubtotalInclTaxValue)
                        </div>
                        <div class="col-sm-7">
                            @T("Admin.Orders.Fields.Edit.ExclTax")&nbsp; @Html.NopEditorFor(model => model.OrderSubtotalExclTaxValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderSubTotalDiscountInclTaxValue)
                        </div>
                        <div class="col-sm-2">
                            @T("Admin.Orders.Fields.Edit.InclTax")&nbsp; @Html.NopEditorFor(model => model.OrderSubTotalDiscountInclTaxValue)
                        </div>
                        <div class="col-sm-7">
                            @T("Admin.Orders.Fields.Edit.ExclTax")&nbsp; @Html.NopEditorFor(model => model.OrderSubTotalDiscountExclTaxValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderShippingInclTaxValue)
                        </div>
                        <div class="col-sm-2">
                            @T("Admin.Orders.Fields.Edit.InclTax")&nbsp; @Html.NopEditorFor(model => model.OrderShippingInclTaxValue)
                        </div>
                        <div class="col-sm-7">
                            @T("Admin.Orders.Fields.Edit.ExclTax")&nbsp; @Html.NopEditorFor(model => model.OrderShippingExclTaxValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.PaymentMethodAdditionalFeeInclTaxValue)
                        </div>
                        <div class="col-sm-2">
                            @T("Admin.Orders.Fields.Edit.InclTax")&nbsp; @Html.NopEditorFor(model => model.PaymentMethodAdditionalFeeInclTaxValue)
                        </div>
                        <div class="col-sm-7">
                            @T("Admin.Orders.Fields.Edit.ExclTax")&nbsp; @Html.NopEditorFor(model => model.PaymentMethodAdditionalFeeExclTaxValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.TaxRatesValue)
                        </div>
                        <div class="col-sm-9">
                            @Html.NopEditorFor(model => model.TaxRatesValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.TaxValue)
                        </div>
                        <div class="col-sm-9">
                            @Html.NopEditorFor(model => model.TaxValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderTotalDiscountValue)
                        </div>
                        <div class="col-sm-9">
                            @Html.NopEditorFor(model => model.OrderTotalDiscountValue)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.OrderTotalValue)
                        </div>
                        <div class="col-sm-9">
                            @Html.NopEditorFor(model => model.OrderTotalValue)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        &nbsp;
                    </div>
                    <div class="col-sm-9">
                        <input type="submit" name="btnEditOrderTotals" value="@T("Admin.Orders.Fields.EditOrderTotals")" onclick=" toggleOrderTotals(true);return false; " id="btnEditOrderTotals" class="btn bg-light-blue" />
                        <input type="submit" name="btnSaveOrderTotals" value="@T("Admin.Orders.Fields.SaveOrderTotals")" id="btnSaveOrderTotals" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                        <input type="submit" name="btnCancelOrderTotals" value="@T("Admin.Orders.Fields.CancelOrderTotals")" onclick=" toggleOrderTotals(false);return false; " id="btnCancelOrderTotals" class="btn bg-teal" />
                    </div>
                </div>

                if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CardType)
                        </div>
                        <div class="col-sm-9">
                            <p id="lblCardType">@Model.CardType</p>
                            @Html.NopEditorFor(model => model.CardType)
                        </div>
                    </div>
                }
                if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CardName)
                        </div>
                        <div class="col-sm-9">
                            <p id="lblCardName">@Model.CardName</p>
                            @Html.NopEditorFor(model => model.CardName)
                        </div>
                    </div>
                }
                if (Model.AllowStoringCreditCardNumber || !String.IsNullOrEmpty(Model.CardNumber))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CardNumber)
                        </div>
                        <div class="col-sm-9">
                            <p id="lblCardNumber">@Model.CardNumber</p>
                            @Html.NopEditorFor(model => model.CardNumber)
                        </div>
                    </div>
                }
                if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CardCvv2)
                        </div>
                        <div class="col-sm-9">
                            <p id="lblCardCvv2">@Model.CardCvv2</p>
                            @Html.NopEditorFor(model => model.CardCvv2)
                        </div>
                    </div>
                }
                if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CardExpirationMonth)
                        </div>
                        <div class="col-sm-9">
                            <p id="lblCardExpirationMonth">@Model.CardExpirationMonth</p>
                            @Html.NopEditorFor(model => model.CardExpirationMonth)
                        </div>
                    </div>
                }
                if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CardExpirationYear)
                        </div>
                        <div class="col-sm-9">
                            <p id="lblCardExpirationYear">@Model.CardExpirationYear</p>
                            @Html.NopEditorFor(model => model.CardExpirationYear)
                        </div>
                    </div>
                }
                if (Model.AllowStoringCreditCardNumber)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            &nbsp;
                        </div>
                        <div class="col-sm-9">
                            <input type="submit" name="btnEditCC" value="@T("Admin.Orders.Fields.EditCC")" onclick="toggleCC(true);return false; " id="btnEditCC" class="btn bg-light-blue" />
                            <input type="submit" name="btnSaveCC" value="@T("Admin.Orders.Fields.SaveCC")" id="btn bg-light-blue" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                            <input type="submit" name="btnCancelCC" value="@T("Admin.Orders.Fields.CancelCC")" onclick=" toggleCC(false);return false; " id="btnCancelCC" class="btn bg-teal"/>
                        </div>
                    </div>
                }
                if (!String.IsNullOrEmpty(Model.AuthorizationTransactionId))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.AuthorizationTransactionId)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.AuthorizationTransactionId</p>
                        </div>
                    </div>
                }
                if (!String.IsNullOrEmpty(Model.CaptureTransactionId))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.CaptureTransactionId)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.CaptureTransactionId</p>
                        </div>
                    </div>
                }
                if (!String.IsNullOrEmpty(Model.SubscriptionTransactionId))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.NopLabelFor(model => model.SubscriptionTransactionId)
                        </div>
                        <div class="col-sm-9">
                            <p>@Model.SubscriptionTransactionId</p>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.PaymentMethod)
                    </div>
                    <div class="col-sm-9">
                        <p>@Model.PaymentMethod</p>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-group">
                <div class="col-sm-3">
                    @Html.NopLabelFor(model => model.PaymentStatus)
                </div>
                <div class="col-sm-9">
                    <p>@Model.PaymentStatus</p>
                </div>
            </div>
            @if (Model.CanCapture || Model.CanMarkOrderAsPaid || Model.CanRefund || Model.CanRefundOffline ||
                Model.CanPartiallyRefund || Model.CanPartiallyRefundOffline || Model.CanVoid || Model.CanVoidOffline)
            {
                <div class="form-group">
                    <div class="col-sm-3">
                        &nbsp;
                    </div>
                    <div class="col-sm-9">
                        @if (!Model.IsLoggedInAsVendor)
                        {
                            if (Model.CanCapture)
                            {
                                <input type="submit" name="captureorder" value="@T("Admin.Orders.Fields.Capture")" id="captureorder" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanMarkOrderAsPaid)
                            {
                                <input type="submit" name="markorderaspaid" value="@T("Admin.Orders.Fields.MarkAsPaid")" id="markorderaspaid" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanRefund)
                            {
                                <input type="submit" name="refundorder" value="@T("Admin.Orders.Fields.Refund")" id="refundorder" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanRefundOffline)
                            {
                                <input type="submit" name="refundorderoffline" value="@T("Admin.Orders.Fields.RefundOffline")" id="refundorderoffline" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanPartiallyRefund)
                            {
                                <input type="submit" id="partiallyrefundorder" name="partiallyrefundorder" value="@T("Admin.Orders.Fields.PartialRefund")" onclick=" javascript:OpenWindow('@(Url.Action("PartiallyRefundOrderPopup", "Order", new { id = Model.Id, online = true, btnId = "btnRefreshPage", formId = "order-form" }))', 500, 300, true); return false; " class="btn bg-light-blue" />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanPartiallyRefundOffline)
                            {
                                <input type="submit" id="partiallyrefundorderoffline" name="partiallyrefundorderoffline" value="@T("Admin.Orders.Fields.PartialRefundOffline")" onclick=" javascript:OpenWindow('@(Url.Action("PartiallyRefundOrderPopup", "Order", new { id = Model.Id, online = false, btnId = "btnRefreshPage", formId = "order-form" }))', 500, 300, true); return false; " class="btn bg-light-blue" />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanVoid)
                            {
                                <input type="submit" name="voidorder" value="@T("Admin.Orders.Fields.Void")" id="voidorder" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                                <text>&nbsp;</text>
                            }
                            if (Model.CanVoidOffline)
                            {
                                <input type="submit" name="voidorderoffline" value="@T("Admin.Orders.Fields.VoidOffline")" id="voidorderoffline" class="btn bg-light-blue" onclick=" return confirm('@T("Admin.Common.AreYouSure")'); " />
                                <text>&nbsp;</text>
                            }
                        }
                    </div>
                </div>
            }
            @if (Model.CustomValues != null && Model.CustomValues.Count > 0)
            {
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.CustomValues)
                    </div>
                    <div class="col-sm-9">
                        <table>
                            @foreach (var item in Model.CustomValues)
                            {
                                <tr>
                                    <td>
                                        @item.Key:
                                    </td>
                                    <td>@(item.Value != null ? item.Value.ToString() : "")</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-sm-3">
                    @Html.NopLabelFor(model => model.CreatedOn)
                </div>
                <div class="col-sm-9">
                    <p>@Html.DisplayFor(model => model.CreatedOn)</p>
                </div>
            </div>
        </div>
    </div>
</div>
