@model Nop.Admin.Models.ProductVariantModel
@using Nop.Web.Framework;
@using Telerik.Web.Mvc.UI;
@using Nop.Admin.Models;
@using Nop.Core.Domain.Catalog;
@using Nop.Admin;
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.ProductId)
@Html.Telerik().TabStrip().Name("product-edit").Items(x =>
{
    x.Add().Text(T("Admin.Catalog.Products.Variants.Info").Text).Content(TabInfo().ToHtmlString()).Selected(true);
    x.Add().Text(T("Admin.Catalog.Products.Variants.TierPrices").Text).Content(TabTierPrices().ToHtmlString());
    x.Add().Text(T("Admin.Catalog.Products.Variants.Discounts").Text).Content(TabDiscounts().ToHtmlString());
})
@helper TabInfo()
    { 
    @(Html.LocalizedEditor<ProductVariantModel, ProductVariantLocalizedModel>("productvariant-info-localized",
                @<table class="adminContent">
                    @Html.NopField(model => model.Locales[item].Name)
                    @Html.NopField(model => model.Locales[item].Description)
                    <tr>
                        <td colspan="2">
                            @Html.HiddenFor(model => model.Locales[item].LanguageId)
                        </td>
                    </tr>
                </table>
                ,
                @<table class="adminContent">
                    @Html.NopField(model => model.Name)
                    @Html.NopField(model => model.Description)
                </table>
            ))
}


@helper TabTierPrices()
    {
    if (Model.Id > 0)
    {
        @(Html.Telerik().Grid<Nop.Admin.Models.ProductVariantModel.TierPriceModel>()
            .Name("tierprices-grid")
                .DataKeys(keys =>
                {
                    keys.Add(x => x.Id);
                })
                .DataBinding(dataBinding =>
                {
                    dataBinding.Ajax()
                        .Select("TierPriceList", "ProductVariant", new { productVariantId = Model.Id })
                        .Insert("TierPriceInsert", "ProductVariant", new { productVariantId = Model.Id })
                        .Update("TierPriceUpdate", "ProductVariant")
                        .Delete("TierPriceDelete", "ProductVariant");
                })
                .Columns(columns =>
                {
                    columns.Bound(x => x.CustomerRole)
                        .Width(400)
                        .Centered();
                    columns.Bound(x => x.Quantity)
                        .Width(200)
                        .Centered();
                    columns.Bound(x => x.Price)
                        .Width(100);
                    columns.Command(commands =>
                    {
                        commands.Edit();
                        commands.Delete();
                    })
                    .Width(180);
                })
                .ToolBar(commands => commands.Insert())
                .ClientEvents(events => events.OnEdit("onTierPriceEdit"))
                .EnableCustomBinding(true))
    
        <script type="text/javascript">
            function onTierPriceEdit(e) {
                $(e.form).find('#CustomerRole').data('tDropDownList').select(function (dataItem) {
                    return dataItem.Value == e.dataItem['CustomerRoleId'];
                });
            }
        </script>
    }
    else
    {
            @T("Admin.Catalog.Products.Variants.TierPrices.SaveBeforeEdit")
    }
        
}

@helper TabDiscounts()
    {
        if (Model.AvailableDiscounts != null && Model.AvailableDiscounts.Count > 0)
        {
            foreach (var discount in Model.AvailableDiscounts)
            {
            <input type="checkbox" name="SelectedDiscountIds" value="@discount.Id"
            @if (Model.SelectedDiscountIds != null && Model.SelectedDiscountIds.Contains(discount.Id))
            {
                <text>checked="checked"</text>
            }
            />@discount.Name
            <br />
            }
        }
        else
        {
            @T("Admin.Catalog.Products.Variants.Discounts.NoDiscounts")
        }
}