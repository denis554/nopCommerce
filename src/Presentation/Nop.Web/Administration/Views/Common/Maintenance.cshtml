@model MaintenanceModel

@{
    //page title
    ViewBag.Title = T("Admin.System.Maintenance").Text;
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.System.Maintenance")
    </h1>
    <div class="pull-right">
        &nbsp;
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-sm-9 col-sm-offset-3">
                                <strong>@T("Admin.System.Maintenance.DeleteGuests")</strong>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.DeleteGuests.StartDate)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.DeleteGuests.StartDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.DeleteGuests.EndDate)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.DeleteGuests.EndDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.DeleteGuests.OnlyWithoutShoppingCart)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.DeleteGuests.OnlyWithoutShoppingCart)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-9 col-sm-offset-3">
                                <input type="submit" name="delete-guests" class="btn btn-default" value="@T("Admin.Common.Delete")" />
                            </div>
                        </div>
                        @if (Model.DeleteGuests.NumberOfDeletedCustomers.HasValue)
                        {
                            <div class="form-group">
                                <div class="col-sm-9 col-sm-offset-3">
                                    <strong>@string.Format(T("Admin.System.Maintenance.DeleteGuests.TotalDeleted").Text, Model.DeleteGuests.NumberOfDeletedCustomers.Value)</strong>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-sm-9 col-sm-offset-3">
                                <strong>@T("Admin.System.Maintenance.DeleteAbandonedCarts")</strong>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.DeleteAbandonedCarts.OlderThan)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.DeleteAbandonedCarts.OlderThan)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-9 col-sm-offset-3">
                                <input type="submit" name="delete-abondoned-carts" class="btn btn-default" value="@T("Admin.Common.Delete")" />
                            </div>
                        </div>
                        @if (Model.DeleteAbandonedCarts.NumberOfDeletedItems.HasValue)
                        {
                            <div class="form-group">
                                <div class="col-sm-9 col-sm-offset-3">
                                    <strong>@string.Format(T("Admin.System.Maintenance.DeleteAbandonedCarts.TotalDeleted").Text, Model.DeleteAbandonedCarts.NumberOfDeletedItems.Value)</strong>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-sm-9 col-sm-offset-3">
                                <strong>@T("Admin.System.Maintenance.DeleteExportedFiles")</strong>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.DeleteExportedFiles.StartDate)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.DeleteExportedFiles.StartDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.DeleteExportedFiles.EndDate)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.DeleteExportedFiles.EndDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-9 col-sm-offset-3">
                                <input type="submit" name="delete-exported-files" class="btn btn-default" value="@T("Admin.Common.Delete")" />
                            </div>
                        </div>
                        @if (Model.DeleteExportedFiles.NumberOfDeletedFiles.HasValue)
                        {
                            <div class="form-group">
                                <div class="col-sm-9 col-sm-offset-3">
                                    <strong>@string.Format(T("Admin.System.Maintenance.DeleteExportedFiles.TotalDeleted").Text, Model.DeleteExportedFiles.NumberOfDeletedFiles.Value)</strong>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @T("Admin.System.Maintenance.BackupDatabase.DatabaseBackups")
                    </div>
                    <div class="panel-body">
                        <div id="backup-list"></div>    
                    </div>
                    <div class="panel-footer">
                        <input type="submit" id="backup-database" name="backup-database" class="btn btn-default" value="@T("Admin.System.Maintenance.BackupDatabase.BackupNow")" />
                    </div>
                </div>
                <div id="backup-data" style="display: none"></div>

                <script type="text/javascript">
                    function SubmitBackupAction(fileName, action) {
                        $("#backup-data").children().remove();
                        $("#backup-data").append('<input type="hidden" name="backupFileName" value="' + fileName + '"/>');
                        $("#backup-data").append('<input type="hidden" name="action" value="' + action + '"/>');
                        ShowProgress();
                    };

                    function ShowProgress() {
                        $("html, body").animate({ scrollTop: 0 }, 400);
                        showThrobber('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Admin.System.Maintenance.BackupDatabase.Progress").Text))');
                    };

                    $(document).ready(function () {
                        $("#backup-database").on("click", function() {
                            ShowProgress();
                        });
                    });
                </script>

                <script>
                $(document).ready(function() {
                    $("#backup-list").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("BackupFiles", "Common"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors"
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            numeric: false,
                            previousNext: false,
                            info: false
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        columns: [
                            {
                                field: "Name",
                                title: "@T("Admin.System.Maintenance.BackupDatabase.FileName")"
                            }, {
                                field: "Length",
                                title: "@T("Admin.System.Maintenance.BackupDatabase.FileSize")"
                            }, {
                                field: "Link",
                                title: "@T("Admin.System.Maintenance.BackupDatabase.Download")",
                                template: '<a href="#=Link#">@T("Admin.System.Maintenance.BackupDatabase.Download")</a>'
                            }, {
                                field: "Name",
                                title: "@T("Admin.System.Maintenance.BackupDatabase.Restore")",
                                template: '<input type="submit" class="btn btn-default restore" value="@T("Admin.System.Maintenance.BackupDatabase.Restore")" onclick="SubmitBackupAction(\'#=Name#\',\'restore-backup\')"/>'
                            },
                            {
                                field: "Name",
                                title: "@T("Admin.System.Maintenance.BackupDatabase.Delete")",
                                template: '<input type="submit" class="btn btn-default delete" value="@T("Admin.System.Maintenance.BackupDatabase.Delete")" onclick="SubmitBackupAction(\'#=Name#\',\'delete-backup\')" />'
                            }
                        ]
                    });
                });
                </script>
            </div>
        </div>
    </div>
}