@model Nop.Admin.Models.QueuedEmailListModel
           
@using Telerik.Web.Mvc.UI
@using Nop.Web.Framework

@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-system.png")" />
            @T("Admin.System.QueuedEmails")
        </div>
    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchStartDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchStartDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchEndDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchEndDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchFromEmail):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchFromEmail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchToEmail):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchToEmail)
            </td>
        </tr>
       <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchLoadNotSent):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchLoadNotSent)
            </td>
        </tr>
       <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchMaxSentTries):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchMaxSentTries)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GoDirectlyToNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.GoDirectlyToNumber)
                <button type="submit" name="go-to-email-by-number" value="go-to-email-by-number" class="t-button">@T("Admin.Common.Go")</button>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <button type="submit" id="btnSearch" class="t-button">@T("Admin.Common.Search")</button>
            </td>
        </tr>
    </table>
     <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<Nop.Admin.Models.QueuedEmailModel>()
                        .Name("queuedEmails-grid")
                        .ClientEvents(events => events.OnDataBinding("onDataBinding"))
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.Id);
                            columns.Bound(x => x.Priority);
                            columns.Bound(x => x.From);
                            columns.Bound(x => x.FromName);
                            columns.Bound(x => x.CreatedOnUtc); //TODO convert ot user datetime
                            columns.Bound(x => x.SentOnUtc);    //TODO convert ot user datetime
                            columns.Bound(x => x.Id)
                                .Template(x => Html.ActionLink(T("Admin.Common.Edit").Text, "Edit", new { id = x.Id }))
                                .ClientTemplate("<a href=\"Edit/<#= Id #>\">" + T("Admin.Common.Edit").Text + "</a>")
                                .Width(50)
                                .Centered()
                                .HeaderTemplate("Edit")
                                .Filterable(false);                           
                        })
                        .Pageable(settings => settings.PageSize(10))
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("QueuedEmailList", "QueuedEmail", Model))            
                        .EnableCustomBinding(true))
            </td>
        </tr>
    </table>
    
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnSearch').click(function () {
                var grid = $('#queuedEmails-grid').data('tGrid');
                grid.ajaxRequest();
                return false;
            });
        });

    function onDataBinding(e) {
        
        var searchModel = {
                    SearchStartDate: $('#SearchStartDate').val(),
                    SearchEndtDate: $('#SearchEndDate').val(),
                    SearchFromEmail: $('#SearchFromEmail').val(),
                    SearchToEmail: $('#SearchToEmail').val(),
                    SearchLoadNotSent: $('#SearchLoadNotSent').is(':checked'),
                    SearchMaxSentTries: $('#SearchMaxSentTries').val()
                };
        e.data = searchModel;
    }
   </script>
    
}