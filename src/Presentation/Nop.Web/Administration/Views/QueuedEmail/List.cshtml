@model QueuedEmailListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.System.QueuedEmails").Text;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.System.QueuedEmails")
        </h1>
        <div class="pull-right">
            <input type="button" id="delete-selected" class="btn btn-default" value="@T("Admin.System.QueuedEmails.DeleteSelected")" />
            <input type="submit" name="delete-all" class="btn btn-default" value="@T("Admin.System.QueuedEmails.DeleteAll")" onclick="return confirm('@T("Admin.Common.AreYouSure")'); "/>
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.SearchStartDate)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.SearchStartDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.SearchEndDate)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.SearchEndDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.SearchFromEmail)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.SearchFromEmail)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.SearchToEmail)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.SearchToEmail)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.SearchLoadNotSent)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.SearchLoadNotSent)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.SearchMaxSentTries)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.SearchMaxSentTries)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.GoDirectlyToNumber)
                            </div>
                            <div class="col-sm-9">
                                <div class="input-group input-group-short">
                                    @Html.NopEditorFor(model => model.GoDirectlyToNumber)
                                    <span class="input-group-btn">
                                        <input type="submit" id="go-to-email-by-number"  class="btn btn-info btn-flat" value="@T("Admin.Common.Go")" />
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                &nbsp;
                            </div>
                            <div class="col-sm-9">
                                <input type="button" id="search-queuedemails" class="btn btn-default" value="@T("Admin.Common.Search")" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">

                        <div id="queuedEmails-grid"></div>

                    <script>
                        $(document).ready(function() {
                            $("#queuedEmails-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("QueuedEmailList", "QueuedEmail"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)]
                                },
                                scrollable: false,
                                dataBound: onDataBound,
                                columns: [
                                {
                                    field: "Id",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                    width: 50
                                }, {
                                    field: "Id",
                                    title: "@T("Admin.System.QueuedEmails.Fields.Id")",
                                    width: 50
                                }, {
                                    field: "Subject",
                                    title: "@T("Admin.System.QueuedEmails.Fields.Subject")",
                                    width: 300
                                }, {
                                    field: "From",
                                    title: "@T("Admin.System.QueuedEmails.Fields.From")",
                                    width: 100
                                }, {
                                    field: "To",
                                    title: "@T("Admin.System.QueuedEmails.Fields.To")",
                                    width: 100
                                }, {
                                    field: "CreatedOn",
                                    title: "@T("Admin.System.QueuedEmails.Fields.CreatedOn")",
                                    width: 100,
                                    type: "date",
                                    format: "{0:G}"
                                }, {
                                    field: "DontSendBeforeDate",
                                    title: "@T("Admin.System.QueuedEmails.Fields.DontSendBeforeDate")",
                                    width: 100,
                                    type: "date",
                                    format: "{0:G}"
                                }, {
                                    field: "SentOn",
                                    title: "@T("Admin.System.QueuedEmails.Fields.SentOn")",
                                    width: 100,
                                    type: "date",
                                    format: "{0:G}"
                                }, {
                                    field: "PriorityName",
                                    title: "@T("Admin.System.QueuedEmails.Fields.Priority")",
                                    width: 100
                                }, {
                                    field: "Id",
                                    title: "@T("Admin.Common.Edit")",
                                    width: 50,
                                    template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                                    }
                                ]
                            });
                        });
                    </script>
                    <script type="text/javascript">
                        var selectedIds = [];

                        $(document).ready(function() {

                            //search button
                            $('#search-queuedemails').click(function() {
                                //search
                                var grid = $('#queuedEmails-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                //clear selected checkboxes
                                $('.checkboxGroups').attr('checked', false).change();
                                selectedIds = [];
                                return false;
                            });

                            $("".concat("#@Html.FieldIdFor(model => model.SearchFromEmail),",
                                "#@Html.FieldIdFor(model => model.SearchToEmail)")).keydown(function(event) {
                                if (event.keyCode === 13) {
                                    $("#search-queuedemails").click();
                                    return false;
                                }
                            });

                            //"delete selected" button
                            $('#delete-selected').click(function(e) {
                                e.preventDefault();

                                var postData = {
                                    selectedIds: selectedIds
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("DeleteSelected", "QueuedEmail"))",
                                    data: postData,
                                    complete: function(data) {
                                        //reload grid
                                        var grid = $('#queuedEmails-grid').data('kendoGrid');
                                        grid.dataSource.page(1); //new search. Set page size to 1
                                        //grid.dataSource.read(); we already loaded the grid above using "page" function
                                        //clear selected checkboxes
                                        $('.checkboxGroups').attr('checked', false).change();
                                        selectedIds = [];
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert(thrownError);
                                    },
                                    traditional: true
                                });
                                return false;
                            });

                            $('#mastercheckbox').click(function() {
                                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                            });

                            //wire up checkboxes.
                            $('#queuedEmails-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function(e) {
                                var $check = $(this);
                                if ($check.is(":checked") == true) {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked == -1) {
                                        //add id to selectedIds.
                                        selectedIds.push($check.val());
                                    }
                                } else {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked > -1) {
                                        //remove id from selectedIds.
                                        selectedIds = $.grep(selectedIds, function(item, index) {
                                            return item != $check.val();
                                        });
                                    }
                                }
                                updateMasterCheckbox();
                            });
                        });

                        function additionalData() {
                            var data = {
                                SearchStartDate: $('#@Html.FieldIdFor(model => model.SearchStartDate)').val(),
                                SearchEndDate: $('#@Html.FieldIdFor(model => model.SearchEndDate)').val(),
                                SearchFromEmail: $('#@Html.FieldIdFor(model => model.SearchFromEmail)').val(),
                                SearchToEmail: $('#@Html.FieldIdFor(model => model.SearchToEmail)').val(),
                                SearchLoadNotSent: $('#@Html.FieldIdFor(model => model.SearchLoadNotSent)').is(':checked'),
                                SearchMaxSentTries: $('#@Html.FieldIdFor(model => model.SearchMaxSentTries)').val()
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }

                        function onDataBound(e) {

                            $('#queuedEmails-grid input[type=checkbox][id!=mastercheckbox]').each(function() {
                                var currentId = $(this).val();
                                var checked = jQuery.inArray(currentId, selectedIds);
                                //set checked based on if current checkbox's value is in selectedIds.
                                $(this).attr('checked', checked > -1);
                            });

                            updateMasterCheckbox();
                        }

                        function updateMasterCheckbox() {
                            var numChkBoxes = $('#queuedEmails-grid input[type=checkbox][id!=mastercheckbox]').length;
                            var numChkBoxesChecked = $('#queuedEmails-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                        }
                    </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
}