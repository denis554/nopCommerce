@model Nop.Admin.Models.ActivityLogSearchModel
           
@using Telerik.Web.Mvc.UI
@using Nop.Web.Framework

@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-configuration.png")" />
            @T("Admin.Configuration.ActivityLog.ActivityLog.Title")
        </div>
        <div class="options">
            <button type="submit" id="btnSearch"  name="search" value="search" class="t-button">@T("Admin.Configuration.ActivityLog.ActivityLog.SearchButton.Text")</button>
            <a href="@Url.Action("ClearAll")" class="t-button">@T("Admin.Configuration.ActivityLog.ActivityLog.ClearButton.Text")</a>
        </div>
    </div>
    <p>
    </p>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CreatedOnFrom):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CreatedOnFrom)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CreatedOnTo):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CreatedOnTo)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CustomerEmail):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerEmail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ActivityLogTypeId):
            </td>
            <td class="adminData">
                @Html.DropDownList("ActivityLogTypeId", Model.ActivityLogType, new { @class = "adminInput" })
            </td>
        </tr>
    </table>    
    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<Nop.Admin.Models.ActivityLogModel>()
                        .Name("activityLog-grid")
                        .ClientEvents(events => events.OnDataBinding("onDataBinding"))
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.ActivityLogType)
                                .Centered();
                        })
                        .Columns(columns =>
                        {
                            columns.Bound(x => x)
                                .Template(x => Html.ActionLink(x.Customer, "Edit", "Customer", new { id = x.CustomerId }, null))
                                .ClientTemplate(Html.ActionLink("<#= Customer #>", "Edit", "Customer", new { id = "<#=CustomerId#>" }, null).ToString())
                                .HeaderTemplate(T("Admin.Configuration.ActivityLog.ActivityLog.Fields.Customer").Text)
                                .Centered();
                        })
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.Comment)
                                .Centered();
                        })
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.CreatedOn)
                                .Centered();
                        })
                        .Columns(columns =>
                        {
                            columns.Bound(x => x.Id)
                                .Template(x => Html.ActionLink(T("Admin.Configuration.ActivityLog.ActivityLog.DeleteButton.Text").Text, "DeleteLog", new { id = x.Id.ToString() }, new { @class = "t-button" }))
                                .ClientTemplate("<a class=\"t-button\" href=\"DeleteLog/<#= Id #>\">" + T("Admin.Configuration.ActivityLog.ActivityLog.DeleteButton.Text").Text + "</a>")
                                .Centered()
                                .Filterable(false);
                        })
                        .Pageable(settings => settings.PageSize(10))
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("ListLogs", "ActivityLog", Model))
                        .EnableCustomBinding(true))
            </td>
        </tr>
    </table>
    <script type="text/javascript">

        $(document).ready(function () {

            $('#btnSearch').click(function () {
                var grid = $('#activityLog-grid').data('tGrid');
                grid.ajaxRequest();
                return false;
            });
        });

        function onDataBinding(e) {
            var searchModel = {
                CreatedOnFrom: $('#@Html.FieldIdFor(model => model.CreatedOnFrom)').val(),
                CreatedOnTo: $('#@Html.FieldIdFor(model => model.CreatedOnTo)').val(),
                CustomerEmail: $('#@Html.FieldIdFor(model => model.CustomerEmail)').val(),
                ActivityLogTypeId: $('#ActivityLogTypeId').val()
            };
            e.data = searchModel;
        }

   </script>    
}