@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
}

@model Nop.Admin.Models.CategoryModel.AddCategoryProductModel
@using Nop.Web.Framework;
@using Telerik.Web.Mvc.UI;
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" />
            @T("Admin.Catalog.Categories.Products.AddNew")
        </div>
    </div>    
    
       if (ViewBag.RefreshPage == true)
       {
        <script type="text/javascript">
            try {window.opener.document.forms[0].@(ViewBag.btnId).click();}
            catch (e){} 
            window.close();
        </script>
       }

    
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchProductName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchManufacturerId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <button type="submit" name="search-products" value="search-products" class="t-button">@T("Admin.Common.Search")</button>
            </td>
        </tr>
    </table>
    <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<Nop.Admin.Models.ProductModel>(Model.Products.Data)
                    .Name("products-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Id)
                        .Template(
                                @<text>
                                    <input name="SelectedProductIds" type="checkbox" value="@item.Id " />
                                </text>
                        )
                        .ClientTemplate("<input type='checkbox' name='SelectedProductIds' value='<#= Id #>' />")
                        .Title("Check")
                        .Width(50)
                        .Filterable(false);
                        columns.Bound(x => x.Name).Filterable(false);
                        //little hack to allow filtering by category and manufacturer
                        columns.Bound(x => x.SearchCategoryId).Filterable(false).Hidden(true);
                        columns.Bound(x => x.SearchManufacturerId).Filterable(false).Hidden(true);
                        columns.Bound(x => x.Published).Filterable(false)
                            .Width("100px")
                            .Template(x => x.Published.ToString().ToLower())
                            .Centered();
                    })
                    .Pageable(settings => settings.Total(Model.Products.Total).PageSize(10))
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("ProductAddPopupList", "Category"))
                    .Filterable(filtering => filtering.Filters(filters =>
                    {
                        //product name
                        if (!String.IsNullOrEmpty(ViewData["searchProductName"] as string))
                        {
                            filters.Add(x => x.Name).Contains((string)ViewData["searchProductName"]);
                        }
                        //category id
                        if (ViewData["searchCategoryId"] != null)
                        {
                            filters.Add(x => x.SearchCategoryId).IsEqualTo((int)ViewData["searchCategoryId"]);
                        }
                        //manufacturer id
                        if (ViewData["searchManufacturerId"] != null)
                        {
                            filters.Add(x => x.SearchManufacturerId).IsEqualTo((int)ViewData["searchManufacturerId"]);
                        }
                    }))
                    .EnableCustomBinding(true))
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <button type="submit" name="save" value="save" class="t-button">@T("Admin.Common.Save")</button>
            </td>
        </tr>
    </table>
}