@model Nop.Admin.Models.CurrencyModel
@using Nop.Web.Framework;
@using Telerik.Web.Mvc.UI;
@{
    var cultures = System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes.SpecificCultures).ToList();
}
@Html.Telerik().ScriptRegistrar().Globalization(true)
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Name)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.CurrencyCode):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.CurrencyCode)
            @Html.ValidationMessageFor(model => model.CurrencyCode)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Rate):
        </td>
        <td class="adminData">
            @Html.Telerik().NumericTextBoxFor(model => model.Rate)
            @Html.ValidationMessageFor(model => model.Rate)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.DisplayLocale):
        </td>
        <td class="adminData">
            @(Html.Telerik().ComboBoxFor(x => x.DisplayLocale)
                .BindTo(cultures.Select(x =>
                    new DropDownItem { Value = x.IetfLanguageTag, Text = string.Format("{0}. {1}", x.IetfLanguageTag, x.EnglishName) }))
                .Encode(true)
                .AutoFill(false)
                .Filterable(x => { x.Enabled(false); }))
            @Html.ValidationMessageFor(model => model.DisplayLocale)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Published):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Published)
            @Html.ValidationMessageFor(model => model.Published)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.DisplayOrder):
        </td>
        <td class="adminData">
            @Html.Telerik().NumericTextBoxFor(model => model.DisplayOrder).DecimalDigits(0)
            @Html.ValidationMessageFor(model => model.DisplayOrder)
        </td>
    </tr>
    @if (Model.CreatedOnUtc > DateTime.MinValue)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CreatedOnStr):
            </td>
            <td class="adminData">
                @Html.DisplayFor(model => model.CreatedOnStr)
            </td>
        </tr>
    }
    @if (Model.UpdatedOnUtc > DateTime.MinValue)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.UpdatedOnStr):
            </td>
            <td class="adminData">
                @Html.DisplayFor(model => model.UpdatedOnStr)
            </td>
        </tr>
    }
 </table>


