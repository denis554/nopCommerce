@using Nop.Web.Framework.Menu;

@{
    //load sitemap
    var siteMap = new Nop.Web.Framework.Menu.XmlSiteMap();
    siteMap.LoadFrom("~/Administration/sitemap.config");
}

@helper RenderMenuItem(Nop.Web.Framework.Menu.SiteMapNode item)
{
string url = null;
if (!string.IsNullOrEmpty(item.ControllerName) && !string.IsNullOrEmpty(item.ActionName))
{
    url = Url.Action(item.ActionName, item.ControllerName, item.RouteValues, null, null);
}
else if (!string.IsNullOrEmpty(item.Url))
{
    url = item.Url.StartsWith("~/", StringComparison.Ordinal) ? Url.Content(item.Url) : item.Url;
}
if (!String.IsNullOrEmpty(url))
{
        <li>
            <a href="@url">
                @if (!String.IsNullOrEmpty(item.IconClass))
                {
                    <text>
                        <i class="fa @Url.Content(item.IconClass)"></i>
                    </text>
                }
                <span>@item.Title</span>
            </a>
        </li>
}
else
{
        <li class="treeview">
            <a href="#">
                @if (!String.IsNullOrEmpty(item.IconClass))
                {
                    <text>
                        <i class="fa @Url.Content(item.IconClass)"></i>
                    </text>
                }
                <span>@item.Title</span>
                <i class="fa fa-angle-left pull-right"></i>
            </a>

            @{ var childNodes = item.ChildNodes.Where(x => x.Visible).ToList(); }
            @if (childNodes.Any())
            {
                <ul class="treeview-menu">
                    @foreach (var childItem in childNodes)
                    {
                        @RenderMenuItem(childItem)
                    }
                </ul>
            }
        </li>
                }
}

<ul class="sidebar-menu">
    @{
        //standard (default) items
        var rootNode = siteMap.RootNode;

        //plugins
        var adminMenuPlugins = EngineContext.Current.Resolve<Nop.Core.Plugins.IPluginFinder>()
            .GetPlugins<IAdminMenuPlugin>()
            .ToList();
        foreach (var adminMenuPlugin in adminMenuPlugins)
        {
            adminMenuPlugin.ManageSiteMap(rootNode);
        }
        //"Plugins" menu item should be visible when it has some child nodes
        var pluginNode = rootNode.ChildNodes.FirstOrDefault(x => x.SystemName == "Third party plugins");
        if (pluginNode != null && pluginNode.Visible)
        {
            var permissionService = EngineContext.Current.Resolve<Nop.Services.Security.IPermissionService>();
            var hasManagePluginsPermission = permissionService.Authorize(Nop.Services.Security.StandardPermissionProvider.ManagePlugins);
            pluginNode.Visible = hasManagePluginsPermission && pluginNode.ChildNodes.Any(x => x.Visible);
        }
    }
    @foreach (var item in rootNode.ChildNodes.Where(x => x.Visible))
    {
        @RenderMenuItem(item)
    }
</ul>