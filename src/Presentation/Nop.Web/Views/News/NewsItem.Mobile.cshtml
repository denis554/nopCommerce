@model Nop.Web.Models.News.NewsItemModel
@{
    Layout = "~/Views/Shared/_MobileRoot.cshtml";

    //title
    Html.AddTitleParts(Model.Title);
}
<div class="newsitem">
    <div class="page-title">
        <h1>@Model.Title</h1>
    </div>
    <div class="clear">
    </div>
    <div class="newsdate">
        @Model.CreatedOn.ToString("D")
    </div>
    <div class="newsbody">
        @Html.Raw(Model.Full)
    </div>
    @if (Model.AllowComments)
    {
        <div class="newscomments">
            <div class="title">
                @T("News.Comments")
            </div>
            <div class="clear">
            </div>
            <div class="newcomment">
                @using (Html.BeginForm())
                {
                    <div class="leavetitle">
                        <strong>
                            @T("News.Comments.LeaveYourComment")
                        </strong>
                    </div>
                    @Html.LabelFor(model => model.AddNewComment.CommentTitle)
                    @Html.TextBoxFor(model => model.AddNewComment.CommentTitle)
                    @Html.ValidationMessageFor(model => model.AddNewComment.CommentTitle)
                    @Html.LabelFor(model => model.AddNewComment.CommentText)
                    @Html.TextAreaFor(model => model.AddNewComment.CommentText)
                    @Html.ValidationMessageFor(model => model.AddNewComment.CommentText)
                    <div class="message-error">
                        @{
                    string result = TempData["nop.news.addcomment.result"] as string;
                        }
                        @if (!String.IsNullOrEmpty(result))
                        {
                            @result
                            <br />
                        }
                        @Html.ValidationSummary(false)
                    </div>
                    <div class="button">
                        <input type="submit" id="add-comment" name="add-comment" value="@T("News.Comments.SubmitButton")" />
                    </div>
                       
                }
            </div>
            <div class="clear">
            </div>
            <div class="commentlist">
                @foreach (var comment in Model.Comments)
                {
                    <div class="newscomment">
                        <div class="commentinfo">
                            <div class="userinfo">
                                @if (comment.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = comment.CustomerId })" class="username">@(comment.CustomerName)</a>
                                }
                                else
                                {
                                    <span class="username">@(comment.CustomerName)</span>
                                }
                            </div>
                            <div class="commenttime">
                                @T("News.Comments.CreatedOn"): <span class="statvalue">@comment.CreatedOn.ToString("g")</span>
                            </div>
                        </div>
                        <div class="commentcontent">
                            <div class="commenttitle">
                                <span class="commenttext">@comment.CommentTitle</span>
                            </div>
                            <div class="commentbody">
                                <span class="commenttext">@Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(comment.CommentText, false, true, false, false, false, false))</span>
                            </div>
                        </div>
                    </div>
                    <div class="clear">
                    </div>
                }
            </div>
        </div>
    }
</div>
