@model ProductEmailAFriendModel
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductEmailAFriend").Text);
}
<div class="page email-a-friend-page">
    <div class="page-title">
        <h1>@T("Products.EmailAFriend.Title")</h1>
    </div>
    <div class="clear">
    </div>
    <div class="page-body">
        @if (Model.SuccessfullySent)
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            using (Html.BeginForm())
            {
                               
            <fieldset>
                <p>
                    <a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a>
                </p>
                <p class="message-error">
                    @Html.ValidationSummary(true)
                </p>
                <div class="forms-box">
                    <div class="inputs-left">
                        <div class="inputs">
                            @Html.LabelFor(model => model.FriendEmail)
                            <div class="input-box">
                                @Html.TextBoxFor(model => model.FriendEmail, new { @class = "friend-email", placeholder = T("Products.EmailAFriend.FriendEmail.Hint") })
                            </div>
                            @Html.ValidationMessageFor(model => model.FriendEmail)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.YourEmailAddress)
                            <div class="input-box">
                                @Html.TextBoxFor(model => model.YourEmailAddress, new { @class = "your-email", placeholder = T("Products.EmailAFriend.YourEmailAddress.Hint") })
                            </div>
                            @Html.ValidationMessageFor(model => model.YourEmailAddress)
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                    </div>
                    <div class="inputs-right inputs">
                        @Html.LabelFor(model => model.PersonalMessage)
                        <div class="input-box">
                            @Html.TextAreaFor(model => model.PersonalMessage, new { @class = "personal-message", placeholder = T("Products.EmailAFriend.PersonalMessage.Hint") })
                        </div>
                        @Html.ValidationMessageFor(model => model.PersonalMessage)
                    </div>
                </div>
                <div class="clear">
                </div>
                <div class="buttons">
                    <input type="submit" name="send-email" class="button-1 send-email-a-friend-button" value="@T("Products.EmailAFriend.Button")" />
                </div>
            </fieldset>
            }
        }
    </div>
</div>
