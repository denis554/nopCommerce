@{
    var openAuthParameters = ExternalAuthorizerHelper.RetrieveParametersFromRoundTrip(false);
}
@using System.Net
@using Microsoft.AspNetCore.Http
@using Nop.Core
@using Nop.Services.Authentication.External
@inject IWebHelper webHelper
@inject IHttpContextAccessor httpContextAccessor
@if (openAuthParameters != null)
{
    <div class="external-auth-association">
        <label>@T("Account.AssociatedExternalAuth.YourAccountWillBeLinkedTo")</label>
        <span class="identifier">@CommonHelper.EnsureMaximumLength(openAuthParameters.ExternalIdentifier, 40, "...")</span>
        <a href="@Url.Action("RemoveParameterAssociation", "ExternalAuthentication", new { ReturnUrl = WebUtility.UrlEncode(webHelper.GetRawUrl(httpContextAccessor.HttpContext.Request)) })" class="remove">@T("Account.AssociatedExternalAuth.YourAccountWillBeLinkedTo.Remove")</a>
    </div>
}