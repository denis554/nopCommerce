@model StoreThemeSelectorModel
@using System.Net
@using Microsoft.AspNetCore.Http
@using Nop.Core
@using Nop.Web.Models.Common
@inject IWebHelper webHelper
@inject IHttpContextAccessor httpContextAccessor
@if (Model.AvailableStoreThemes.Count > 1)
{
    var request = httpContextAccessor.HttpContext.Request;
    var rawUrl = request.Path + request.QueryString;

    var themes = Model.AvailableStoreThemes.Select(x => new SelectListItem
    {
        Text = x.Title,
        Value = webHelper.ModifyQueryString(Url.Action("SetStoreTheme", "Common", new { themename = x.Name }), "returnurl=" + WebUtility.UrlEncode(rawUrl), null),
        Selected = x.Name.Equals(Model.CurrentStoreTheme.Name, StringComparison.InvariantCultureIgnoreCase)
    });
    <div class="theme-selector">
        @Html.DropDownList("store-theme", themes, new { onchange = "setLocation(this.value);" })
    </div>
}