@model ApplyVendorModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Vendors.Apply").Text);
    //page class
    Html.AppendPageCssClassParts("html-apply-vendor-page");
}
<div class="page apply-vendor-page">
    <div class="page-title">
        <h1>@T("PageTitle.Vendors.Apply")</h1>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync("TopicBlock", new { systemName = "ApplyVendor" })
        @await Component.InvokeAsync("Widget", new { widgetZone = "applyvendor_top" })
        @if (Model.DisableFormInput)
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            <form asp-route="ApplyVendorAccount" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="fieldset">
                    <div class="form-fields">
                        <div class="inputs">
                            <label asp-for="Name">@T("Vendors.ApplyAccount.Name"):</label>
                            <input asp-for="Name" class="name" placeholder="@T("Vendors.ApplyAccount.Name.Hint")"/>
                            <nop-required />
                            <span asp-validation-for="Name"></span>
                        </div>
                        <div class="inputs">
                            <label asp-for="Email">@T("Vendors.ApplyAccount.Email"):</label>
                            <input asp-for="Email" class="name" placeholder="@T("Vendors.ApplyAccount.Email.Hint")"/>
                            <nop-required />
                            <span asp-validation-for="Email"></span>
                        </div>
                        <div class="inputs">
                            <label asp-for="Description">@T("Vendors.ApplyAccount.Description"):</label>
                            <textarea asp-for="Description" class="description"></textarea>
                        </div>
                        <div class="inputs">
                            <label>@T("Vendors.ApplyAccount.Picture"):</label>
                            <input name="uploadedFile" type="file"/>
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                <nop-generate-captcha />
                            </div>
                        }
                    </div>
                </div>
                <div class="buttons">
                    <input type="submit" name="send-email" class="button-1 apply-vendor-button" value="@T("Vendors.ApplyAccount.Button")" />
                </div>
            </form>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = "applyvendor_bottom" })
    </div>
</div>
